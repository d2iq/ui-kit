"use strict";(self.webpackChunk_d2iq_ui_kit=self.webpackChunk_d2iq_ui_kit||[]).push([[1928],{"./packages/accordion/accordion.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AccordionItemExpandedOnRender:()=>AccordionItemExpandedOnRender,AllowingMultipleAccordionItemsOpen:()=>AllowingMultipleAccordionItemsOpen,ControlledUsingStatelessAccordion:()=>ControlledUsingStatelessAccordion,CustomPaddingSizeOnAccordionItemContent:()=>CustomPaddingSizeOnAccordionItemContent,Default:()=>Default,InteractiveElementsInTitle:()=>InteractiveElementsInTitle,WithAccordionItemThatHasAppearanceDanger:()=>WithAccordionItemThatHasAppearanceDanger,WithChangeHandler:()=>WithChangeHandler,WithDisabledAccordionItem:()=>WithDisabledAccordionItem,__namedExportsOrder:()=>__namedExportsOrder,default:()=>accordion_stories});var react=__webpack_require__("./node_modules/react/index.js"),layout=__webpack_require__("./packages/styleUtils/layout/index.ts"),packages_button=__webpack_require__("./packages/button/index.ts"),accordion=__webpack_require__("./packages/accordion/index.ts");const ToggleInputListStoryHelper=props=>{const[selectedItems,setSelectedItems]=react.useState(props.selectedItems||[]);return props.children({changeHandler:value=>{setSelectedItems(value)},selectedItems})},helpers_ToggleInputListStoryHelper=ToggleInputListStoryHelper;try{ToggleInputListStoryHelper.displayName="ToggleInputListStoryHelper",ToggleInputListStoryHelper.__docgenInfo={description:"",displayName:"ToggleInputListStoryHelper",props:{selectedItems:{defaultValue:null,description:"",name:"selectedItems",required:!1,type:{name:"string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/toggleInputList/stories/helpers/ToggleInputListStoryHelper.tsx#ToggleInputListStoryHelper"]={docgenInfo:ToggleInputListStoryHelper.__docgenInfo,name:"ToggleInputListStoryHelper",path:"packages/toggleInputList/stories/helpers/ToggleInputListStoryHelper.tsx#ToggleInputListStoryHelper"})}catch(__react_docgen_typescript_loader_error){}var packages_0=__webpack_require__("./packages/index.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const accordion_stories={title:"Navigation/Accordion",component:accordion.UQ,subcomponents:{AccordionItem:accordion.Qd,AccordionItemTitle:accordion.SJ,AccordionItemContent:accordion._p,AccordionItemTitleInteractive:accordion.CS,StatelessAccordion:accordion.wB},argTypes:{"data-cy":{control:{disable:!0}}}},Template=args=>react.createElement(accordion.UQ,args,react.createElement(accordion.Qd,{id:"panel1"},react.createElement(accordion.SJ,null,"Panel 1"),react.createElement(accordion._p,null,"Content 1 ",react.createElement("a",{href:"google.com"},"has focusable content"))),react.createElement(accordion.Qd,{id:"panel2"},react.createElement(accordion.SJ,null,"Panel 2"),react.createElement(accordion._p,null,"Content 2")),react.createElement(accordion.Qd,{id:"panel3"},react.createElement(accordion.SJ,null,"Panel 3"),react.createElement(accordion._p,null,"Content 3"))),Default={render:Template},AccordionItemExpandedOnRender={render:Template,args:{initialExpandedItems:["panel1"]}},AllowingMultipleAccordionItemsOpen={render:Template,args:{allowMultipleExpanded:!0}},InteractiveElementsInTitle={render:args=>react.createElement(accordion.UQ,args,react.createElement(accordion.Qd,null,react.createElement(accordion.CS,null,(({getHeading})=>react.createElement(layout.kC,{align:"center"},react.createElement(layout.B5,null,getHeading("Panel 1")),react.createElement(layout.B5,{flex:"shrink"},react.createElement(packages_button.kq,null,"Action"))))),react.createElement(accordion._p,null,"Content 1 ",react.createElement("a",{href:"google.com"},"has focusable content"))),react.createElement(accordion.Qd,null,react.createElement(accordion.SJ,null,"Panel 2"),react.createElement(accordion._p,null,"Content 2")),react.createElement(accordion.Qd,null,react.createElement(accordion.SJ,null,"Panel 3"),react.createElement(accordion._p,null,"Content 3")))},WithChangeHandler=()=>react.createElement(accordion.UQ,{onChange:expanded=>{expanded.length&&alert(`expanded item IDs: ${expanded.join(", ")}`)},allowMultipleExpanded:!0},react.createElement(accordion.Qd,null,react.createElement(accordion.SJ,null,"Panel 1"),react.createElement(accordion._p,null,"Content 1 ",react.createElement("a",{href:"google.com"},"has focusable content"))),react.createElement(accordion.Qd,null,react.createElement(accordion.SJ,null,"Panel 2"),react.createElement(accordion._p,null,"Content 2")),react.createElement(accordion.Qd,null,react.createElement(accordion.SJ,null,"Panel 3"),react.createElement(accordion._p,null,"Content 3"))),WithDisabledAccordionItem={render:args=>react.createElement(accordion.UQ,args,react.createElement(accordion.Qd,null,react.createElement(accordion.SJ,{disabled:!0},"Panel 1"),react.createElement(accordion._p,null,"Content 1")),react.createElement(accordion.Qd,null,react.createElement(accordion.SJ,null,"Panel 2"),react.createElement(accordion._p,null,"Content 2")),react.createElement(accordion.Qd,null,react.createElement(accordion.SJ,null,"Panel 3"),react.createElement(accordion._p,null,"Content 3")))},WithAccordionItemThatHasAppearanceDanger={render:args=>react.createElement(accordion.UQ,null,react.createElement(accordion.Qd,args,react.createElement(accordion.SJ,{appearance:"danger"},"Panel 1"),react.createElement(accordion._p,null,"Content 1")),react.createElement(accordion.Qd,null,react.createElement(accordion.SJ,null,"Panel 2"),react.createElement(accordion._p,null,"Content 2")),react.createElement(accordion.Qd,null,react.createElement(accordion.SJ,null,"Panel 3"),react.createElement(accordion._p,null,"Content 3")))},CustomPaddingSizeOnAccordionItemContent={render:args=>react.createElement(accordion.UQ,args,react.createElement(accordion.Qd,null,react.createElement(accordion.SJ,null,"Panel 1"),react.createElement(accordion._p,{paddingSize:"xxl"},'Content 1 has paddingSize="xxl"')),react.createElement(accordion.Qd,null,react.createElement(accordion.SJ,null,"Panel 2"),react.createElement(accordion._p,null,"Content 2")),react.createElement(accordion.Qd,null,react.createElement(accordion.SJ,null,"Panel 3"),react.createElement(accordion._p,null,"Content 3")))},ControlledUsingStatelessAccordion={render:args=>react.createElement(helpers_ToggleInputListStoryHelper,null,(({changeHandler,selectedItems})=>react.createElement(layout.kC,{gutterSize:"m"},react.createElement(layout.B5,null,react.createElement(accordion.wB,_extends({onChange:changeHandler,expandedItems:selectedItems},args),react.createElement(accordion.Qd,{id:"first"},react.createElement(accordion.SJ,null,"Panel 1"),react.createElement(accordion._p,null,"Content 1")),react.createElement(accordion.Qd,{id:"second"},react.createElement(accordion.SJ,null,"Panel 2"),react.createElement(accordion._p,null,"Content 2")),react.createElement(accordion.Qd,{id:"third"},react.createElement(accordion.SJ,null,"Panel 3"),react.createElement(accordion._p,null,"Content 3")))),react.createElement(layout.B5,null,react.createElement(packages_0.tY,{id:"checkbox",items:[{inputLabel:"Panel 1",id:"id.1",value:"first"},{inputLabel:"Panel 2",id:"id.2",value:"second"},{inputLabel:"Panel 3",id:"id.3",value:"third"}],listLabel:"Open panels",onChange:changeHandler,selectedItems})))))};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: Template\n}",...Default.parameters?.docs?.source}}},AccordionItemExpandedOnRender.parameters={...AccordionItemExpandedOnRender.parameters,docs:{...AccordionItemExpandedOnRender.parameters?.docs,source:{originalSource:'{\n  render: Template,\n  args: {\n    initialExpandedItems: ["panel1"]\n  }\n}',...AccordionItemExpandedOnRender.parameters?.docs?.source}}},AllowingMultipleAccordionItemsOpen.parameters={...AllowingMultipleAccordionItemsOpen.parameters,docs:{...AllowingMultipleAccordionItemsOpen.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    allowMultipleExpanded: true\n  }\n}",...AllowingMultipleAccordionItemsOpen.parameters?.docs?.source}}},InteractiveElementsInTitle.parameters={...InteractiveElementsInTitle.parameters,docs:{...InteractiveElementsInTitle.parameters?.docs,source:{originalSource:'{\n  render: args => <Accordion {...args}>\n      <AccordionItem>\n        <AccordionItemTitleInteractive>\n          {({\n          getHeading\n        }) => <Flex align="center">\n              <FlexItem>{getHeading("Panel 1")}</FlexItem>\n              <FlexItem flex="shrink">\n                <SecondaryButton>Action</SecondaryButton>\n              </FlexItem>\n            </Flex>}\n        </AccordionItemTitleInteractive>\n        <AccordionItemContent>\n          Content 1 <a href="google.com">has focusable content</a>\n        </AccordionItemContent>\n      </AccordionItem>\n      <AccordionItem>\n        <AccordionItemTitle>Panel 2</AccordionItemTitle>\n        <AccordionItemContent>Content 2</AccordionItemContent>\n      </AccordionItem>\n      <AccordionItem>\n        <AccordionItemTitle>Panel 3</AccordionItemTitle>\n        <AccordionItemContent>Content 3</AccordionItemContent>\n      </AccordionItem>\n    </Accordion>\n}',...InteractiveElementsInTitle.parameters?.docs?.source}}},WithChangeHandler.parameters={...WithChangeHandler.parameters,docs:{...WithChangeHandler.parameters?.docs,source:{originalSource:'() => {\n  const onChange = expanded => {\n    if (expanded.length) {\n      alert(`expanded item IDs: ${expanded.join(", ")}`);\n    }\n  };\n  return <Accordion onChange={onChange} allowMultipleExpanded={true}>\n      <AccordionItem>\n        <AccordionItemTitle>Panel 1</AccordionItemTitle>\n        <AccordionItemContent>\n          Content 1 <a href="google.com">has focusable content</a>\n        </AccordionItemContent>\n      </AccordionItem>\n      <AccordionItem>\n        <AccordionItemTitle>Panel 2</AccordionItemTitle>\n        <AccordionItemContent>Content 2</AccordionItemContent>\n      </AccordionItem>\n      <AccordionItem>\n        <AccordionItemTitle>Panel 3</AccordionItemTitle>\n        <AccordionItemContent>Content 3</AccordionItemContent>\n      </AccordionItem>\n    </Accordion>;\n}',...WithChangeHandler.parameters?.docs?.source}}},WithDisabledAccordionItem.parameters={...WithDisabledAccordionItem.parameters,docs:{...WithDisabledAccordionItem.parameters?.docs,source:{originalSource:"{\n  render: args => <Accordion {...args}>\n      <AccordionItem>\n        <AccordionItemTitle disabled={true}>Panel 1</AccordionItemTitle>\n        <AccordionItemContent>Content 1</AccordionItemContent>\n      </AccordionItem>\n      <AccordionItem>\n        <AccordionItemTitle>Panel 2</AccordionItemTitle>\n        <AccordionItemContent>Content 2</AccordionItemContent>\n      </AccordionItem>\n      <AccordionItem>\n        <AccordionItemTitle>Panel 3</AccordionItemTitle>\n        <AccordionItemContent>Content 3</AccordionItemContent>\n      </AccordionItem>\n    </Accordion>\n}",...WithDisabledAccordionItem.parameters?.docs?.source}}},WithAccordionItemThatHasAppearanceDanger.parameters={...WithAccordionItemThatHasAppearanceDanger.parameters,docs:{...WithAccordionItemThatHasAppearanceDanger.parameters?.docs,source:{originalSource:'{\n  render: args => <Accordion>\n      <AccordionItem {...args}>\n        <AccordionItemTitle appearance="danger">Panel 1</AccordionItemTitle>\n        <AccordionItemContent>Content 1</AccordionItemContent>\n      </AccordionItem>\n      <AccordionItem>\n        <AccordionItemTitle>Panel 2</AccordionItemTitle>\n        <AccordionItemContent>Content 2</AccordionItemContent>\n      </AccordionItem>\n      <AccordionItem>\n        <AccordionItemTitle>Panel 3</AccordionItemTitle>\n        <AccordionItemContent>Content 3</AccordionItemContent>\n      </AccordionItem>\n    </Accordion>\n}',...WithAccordionItemThatHasAppearanceDanger.parameters?.docs?.source}}},CustomPaddingSizeOnAccordionItemContent.parameters={...CustomPaddingSizeOnAccordionItemContent.parameters,docs:{...CustomPaddingSizeOnAccordionItemContent.parameters?.docs,source:{originalSource:'{\n  render: args => <Accordion {...args}>\n      <AccordionItem>\n        <AccordionItemTitle>Panel 1</AccordionItemTitle>\n        <AccordionItemContent paddingSize="xxl">\n          Content 1 has paddingSize="xxl"\n        </AccordionItemContent>\n      </AccordionItem>\n      <AccordionItem>\n        <AccordionItemTitle>Panel 2</AccordionItemTitle>\n        <AccordionItemContent>Content 2</AccordionItemContent>\n      </AccordionItem>\n      <AccordionItem>\n        <AccordionItemTitle>Panel 3</AccordionItemTitle>\n        <AccordionItemContent>Content 3</AccordionItemContent>\n      </AccordionItem>\n    </Accordion>\n}',...CustomPaddingSizeOnAccordionItemContent.parameters?.docs?.source}}},ControlledUsingStatelessAccordion.parameters={...ControlledUsingStatelessAccordion.parameters,docs:{...ControlledUsingStatelessAccordion.parameters?.docs,source:{originalSource:'{\n  render: args => <ToggleInputListStoryHelper>\n      {({\n      changeHandler,\n      selectedItems\n    }) => {\n      return <Flex gutterSize="m">\n            <FlexItem>\n              <StatelessAccordion onChange={changeHandler} expandedItems={selectedItems} {...args}>\n                <AccordionItem id="first">\n                  <AccordionItemTitle>Panel 1</AccordionItemTitle>\n                  <AccordionItemContent>Content 1</AccordionItemContent>\n                </AccordionItem>\n                <AccordionItem id="second">\n                  <AccordionItemTitle>Panel 2</AccordionItemTitle>\n                  <AccordionItemContent>Content 2</AccordionItemContent>\n                </AccordionItem>\n                <AccordionItem id="third">\n                  <AccordionItemTitle>Panel 3</AccordionItemTitle>\n                  <AccordionItemContent>Content 3</AccordionItemContent>\n                </AccordionItem>\n              </StatelessAccordion>\n            </FlexItem>\n            <FlexItem>\n              <ToggleInputList id="checkbox" items={[{\n            inputLabel: "Panel 1",\n            id: "id.1",\n            value: "first"\n          }, {\n            inputLabel: "Panel 2",\n            id: "id.2",\n            value: "second"\n          }, {\n            inputLabel: "Panel 3",\n            id: "id.3",\n            value: "third"\n          }]} listLabel="Open panels" onChange={changeHandler} selectedItems={selectedItems} />\n            </FlexItem>\n          </Flex>;\n    }}\n    </ToggleInputListStoryHelper>\n}',...ControlledUsingStatelessAccordion.parameters?.docs?.source}}};const __namedExportsOrder=["Default","AccordionItemExpandedOnRender","AllowingMultipleAccordionItemsOpen","InteractiveElementsInTitle","WithChangeHandler","WithDisabledAccordionItem","WithAccordionItemThatHasAppearanceDanger","CustomPaddingSizeOnAccordionItemContent","ControlledUsingStatelessAccordion"]}}]);