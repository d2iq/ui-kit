// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ButtonBase renders all appearances with props 1`] = `
.emotion-0 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #FFFFFF;
  fill: #FFFFFF;
  background-color: #7D58FF;
  border-radius: 4px;
  padding: 10px 18px;
  cursor: pointer;
  display: inline-block;
  outline: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-weight: 500;
  text-align: center;
  width: 100%;
  color: var(--themeTextColorDisabled, #AEB0B4);
  fill: var(--themeTextColorDisabled, #AEB0B4);
  cursor: default;
  pointer-events: none;
  background-color: var(--themeBgDisabled, #E8EAED);
}

.emotion-0::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-0[href],
.emotion-0[href]:visited {
  color: #FFFFFF;
  fill: #FFFFFF;
}

.emotion-0:hover {
  background-color: #704fe5;
}

.emotion-0:active {
  background-color: #6446cc;
}

.emotion-0:hover,
.emotion-0:focus,
.emotion-0:active {
  color: var(--themeTextColorDisabled, #AEB0B4);
  fill: var(--themeTextColorDisabled, #AEB0B4);
}

.emotion-0:hover,
.emotion-0:focus,
.emotion-0:active {
  background-color: var(--themeBgDisabled, #E8EAED);
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: auto;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-1>div {
  width: auto;
}

.emotion-2 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  display: inherit;
}

.emotion-3 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  padding-left: 8px;
}

.emotion-3:after {
  content: "...";
}

.emotion-4 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  display: inherit;
  padding-left: 4px;
}

<FocusStyleManager
  focusEnabledClass="css-xcotv6"
>
  <button
    ariaHaspopup={true}
    className="emotion-0"
    disabled={true}
    onClick={[Function]}
    tabIndex={0}
    type="submit"
  >
    <span
      className="emotion-1"
    >
      <span
        className="emotion-2"
      >
        <IconPropAdapter
          color="inherit"
          icon="system-check"
          size="xs"
        />
      </span>
      <span
        className="emotion-3"
      >
        Button
      </span>
      <span
        className="emotion-4"
      >
        <IconPropAdapter
          color="inherit"
          icon="system-check"
          size="xs"
        />
      </span>
    </span>
  </button>
</FocusStyleManager>
`;

exports[`ButtonBase renders all appearances with props 2`] = `
.emotion-0 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: var(--themeTextColorInteractive, #7D58FF);
  fill: var(--themeTextColorInteractive, #7D58FF);
  cursor: pointer;
  display: inline-block;
  outline: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-weight: 500;
  text-align: center;
  width: 100%;
  color: var(--themeTextColorDisabled, #AEB0B4);
  fill: var(--themeTextColorDisabled, #AEB0B4);
  cursor: default;
  pointer-events: none;
}

.emotion-0::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-0:hover {
  color: #704fe5;
  fill: #704fe5;
}

.emotion-0:active {
  color: #6446cc;
  fill: #6446cc;
}

.emotion-0[href],
.emotion-0[href]:visited {
  color: var(--themeTextColorInteractive, #7D58FF);
  fill: var(--themeTextColorInteractive, #7D58FF);
}

.emotion-0:hover,
.emotion-0:focus,
.emotion-0:active {
  color: var(--themeTextColorDisabled, #AEB0B4);
  fill: var(--themeTextColorDisabled, #AEB0B4);
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: auto;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-1>div {
  width: auto;
}

.emotion-2 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  display: inherit;
}

.emotion-3 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  padding-left: 8px;
}

.emotion-3:after {
  content: "...";
}

.emotion-4 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  display: inherit;
  padding-left: 4px;
}

<FocusStyleManager
  focusEnabledClass="css-1h85cd2"
>
  <button
    ariaHaspopup={true}
    className="emotion-0"
    disabled={true}
    onClick={[Function]}
    tabIndex={0}
    type="submit"
  >
    <span
      className="emotion-1"
    >
      <span
        className="emotion-2"
      >
        <IconPropAdapter
          color="inherit"
          icon="system-check"
          size="xs"
        />
      </span>
      <span
        className="emotion-3"
      >
        Button
      </span>
      <span
        className="emotion-4"
      >
        <IconPropAdapter
          color="inherit"
          icon="system-check"
          size="xs"
        />
      </span>
    </span>
  </button>
</FocusStyleManager>
`;

exports[`ButtonBase renders all appearances with props 3`] = `
.emotion-0 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #1B2029;
  fill: #1B2029;
  background-color: #DADDE2;
  border-radius: 4px;
  padding: 10px 18px;
  cursor: pointer;
  display: inline-block;
  outline: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-weight: 500;
  text-align: center;
  width: 100%;
  color: var(--themeTextColorDisabled, #AEB0B4);
  fill: var(--themeTextColorDisabled, #AEB0B4);
  cursor: default;
  pointer-events: none;
  background-color: var(--themeBgDisabled, #E8EAED);
}

.emotion-0::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-0[href],
.emotion-0[href]:visited {
  color: #1B2029;
  fill: #1B2029;
}

.emotion-0:hover {
  background-color: #c4c6cb;
}

.emotion-0:active {
  background-color: #aeb0b4;
}

.emotion-0:hover,
.emotion-0:focus,
.emotion-0:active {
  color: var(--themeTextColorDisabled, #AEB0B4);
  fill: var(--themeTextColorDisabled, #AEB0B4);
}

.emotion-0:hover,
.emotion-0:focus,
.emotion-0:active {
  background-color: var(--themeBgDisabled, #E8EAED);
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: auto;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-1>div {
  width: auto;
}

.emotion-2 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  display: inherit;
}

.emotion-3 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  padding-left: 8px;
}

.emotion-3:after {
  content: "...";
}

.emotion-4 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  display: inherit;
  padding-left: 4px;
}

<FocusStyleManager
  focusEnabledClass="css-bwvukd"
>
  <button
    ariaHaspopup={true}
    className="emotion-0"
    disabled={true}
    onClick={[Function]}
    tabIndex={0}
    type="submit"
  >
    <span
      className="emotion-1"
    >
      <span
        className="emotion-2"
      >
        <IconPropAdapter
          color="inherit"
          icon="system-check"
          size="xs"
        />
      </span>
      <span
        className="emotion-3"
      >
        Button
      </span>
      <span
        className="emotion-4"
      >
        <IconPropAdapter
          color="inherit"
          icon="system-check"
          size="xs"
        />
      </span>
    </span>
  </button>
</FocusStyleManager>
`;

exports[`ButtonBase renders all appearances with props 4`] = `
.emotion-0 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #FFFFFF;
  fill: #FFFFFF;
  background-color: #EB293A;
  border-radius: 4px;
  padding: 10px 18px;
  cursor: pointer;
  display: inline-block;
  outline: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-weight: 500;
  text-align: center;
  width: 100%;
  color: var(--themeTextColorDisabled, #AEB0B4);
  fill: var(--themeTextColorDisabled, #AEB0B4);
  cursor: default;
  pointer-events: none;
  background-color: var(--themeBgDisabled, #E8EAED);
}

.emotion-0::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-0[href],
.emotion-0[href]:visited {
  color: #FFFFFF;
  fill: #FFFFFF;
}

.emotion-0:hover {
  background-color: #d32434;
}

.emotion-0:active {
  background-color: #bc202e;
}

.emotion-0:hover,
.emotion-0:focus,
.emotion-0:active {
  color: var(--themeTextColorDisabled, #AEB0B4);
  fill: var(--themeTextColorDisabled, #AEB0B4);
}

.emotion-0:hover,
.emotion-0:focus,
.emotion-0:active {
  background-color: var(--themeBgDisabled, #E8EAED);
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: auto;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-1>div {
  width: auto;
}

.emotion-2 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  display: inherit;
}

.emotion-3 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  padding-left: 8px;
}

.emotion-3:after {
  content: "...";
}

.emotion-4 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  display: inherit;
  padding-left: 4px;
}

<FocusStyleManager
  focusEnabledClass="css-txv5vz"
>
  <button
    ariaHaspopup={true}
    className="emotion-0"
    disabled={true}
    onClick={[Function]}
    tabIndex={0}
    type="submit"
  >
    <span
      className="emotion-1"
    >
      <span
        className="emotion-2"
      >
        <IconPropAdapter
          color="inherit"
          icon="system-check"
          size="xs"
        />
      </span>
      <span
        className="emotion-3"
      >
        Button
      </span>
      <span
        className="emotion-4"
      >
        <IconPropAdapter
          color="inherit"
          icon="system-check"
          size="xs"
        />
      </span>
    </span>
  </button>
</FocusStyleManager>
`;

exports[`ButtonBase renders all appearances with props 5`] = `
.emotion-0 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #FFFFFF;
  fill: #FFFFFF;
  background-color: #14C684;
  border-radius: 4px;
  padding: 10px 18px;
  cursor: pointer;
  display: inline-block;
  outline: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-weight: 500;
  text-align: center;
  width: 100%;
  color: var(--themeTextColorDisabled, #AEB0B4);
  fill: var(--themeTextColorDisabled, #AEB0B4);
  cursor: default;
  pointer-events: none;
  background-color: var(--themeBgDisabled, #E8EAED);
}

.emotion-0::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-0[href],
.emotion-0[href]:visited {
  color: #FFFFFF;
  fill: #FFFFFF;
}

.emotion-0:hover {
  background-color: #12b276;
}

.emotion-0:active {
  background-color: #109e69;
}

.emotion-0:hover,
.emotion-0:focus,
.emotion-0:active {
  color: var(--themeTextColorDisabled, #AEB0B4);
  fill: var(--themeTextColorDisabled, #AEB0B4);
}

.emotion-0:hover,
.emotion-0:focus,
.emotion-0:active {
  background-color: var(--themeBgDisabled, #E8EAED);
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: auto;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-1>div {
  width: auto;
}

.emotion-2 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  display: inherit;
}

.emotion-3 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  padding-left: 8px;
}

.emotion-3:after {
  content: "...";
}

.emotion-4 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  display: inherit;
  padding-left: 4px;
}

<FocusStyleManager
  focusEnabledClass="css-u3f3k6"
>
  <button
    ariaHaspopup={true}
    className="emotion-0"
    disabled={true}
    onClick={[Function]}
    tabIndex={0}
    type="submit"
  >
    <span
      className="emotion-1"
    >
      <span
        className="emotion-2"
      >
        <IconPropAdapter
          color="inherit"
          icon="system-check"
          size="xs"
        />
      </span>
      <span
        className="emotion-3"
      >
        Button
      </span>
      <span
        className="emotion-4"
      >
        <IconPropAdapter
          color="inherit"
          icon="system-check"
          size="xs"
        />
      </span>
    </span>
  </button>
</FocusStyleManager>
`;
