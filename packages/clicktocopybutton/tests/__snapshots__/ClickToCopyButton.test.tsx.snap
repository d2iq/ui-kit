// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ClickToCopyButton renders default 1`] = `
.emotion-2 {
  cursor: pointer;
}

.emotion-1 {
  background-repeat: no-repeat;
  display: inline-block;
  cursor: pointer;
}

.emotion-0 {
  vertical-align: middle;
  fill: currentColor;
}

.emotion-0 use {
  pointer-events: none;
}

<ClickToCopyButton
  textToCopy="text to copy"
>
  <ClickToCopy
    textToCopy="text to copy"
  >
    <Clickable
      action={[Function]}
      disableFocusOutline={false}
      role="button"
      tabIndex={0}
    >
      <Box
        bgImageOptions={
          Object {
            "position": undefined,
            "repeat": undefined,
            "size": undefined,
          }
        }
        className="emotion-2"
        dataCy="box"
        display="inline-block"
        onClick={[Function]}
        onKeyPress={[Function]}
        role="button"
        tabIndex={0}
        tag="span"
      >
        <span
          className="emotion-1"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex={0}
        >
          <Icon
            shape="system-clipboard"
          >
            <svg
              aria-label="system-clipboard icon"
              className="emotion-0"
              data-cy="icon"
              height={24}
              preserveAspectRatio="xMinYMin meet"
              role="img"
              viewBox="0 0 24 24"
              width={24}
            >
              <use
                xlinkHref="#system-clipboard"
              />
            </svg>
          </Icon>
        </span>
      </Box>
    </Clickable>
  </ClickToCopy>
</ClickToCopyButton>
`;

exports[`ClickToCopyButton renders with custom children 1`] = `
.emotion-0 {
  cursor: pointer;
}

<ClickToCopyButton
  textToCopy="text to copy"
>
  <ClickToCopy
    textToCopy="text to copy"
  >
    <Clickable
      action={[Function]}
      disableFocusOutline={false}
      role="button"
      tabIndex={0}
    >
      <div
        className="emotion-0"
        onClick={[Function]}
        onKeyPress={[Function]}
        role="button"
        tabIndex={0}
      >
        custom children
      </div>
    </Clickable>
  </ClickToCopy>
</ClickToCopyButton>
`;
