// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CodeSnippet renders default 1`] = `
.emotion-0 {
  overflow: auto;
  white-space: pre;
}

.emotion-1 {
  overflow: auto;
  white-space: pre;
  padding: 16px;
}

.emotion-2 {
  background-color: #1B2029;
  background-repeat: no-repeat;
  overflow: auto;
  white-space: pre;
  padding: 16px;
}

.emotion-3 {
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  height: auto;
  -webkit-box-flex-wrap: nowrap;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
  -webkit-column-gap: 0;
  column-gap: 0;
  row-gap: 0;
}

.emotion-3>div {
  width: auto;
}

@supports not (column-gap: 1px) {
  .emotion-3>*:not(:last-child) {
    padding-right: 0;
  }
}

@supports not (row-gap: 1px) {
  .emotion-3>*:not(:last-child) {
    padding-bottom: 0;
  }
}

.emotion-4 {
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
}

.emotion-5 {
  font-family: 'Menlo','Bitstream Vera Sans Mono','DejaVu Sans Mono','Monaco','Consolas',monospace;
}

.emotion-6 {
  font-family: 'Menlo','Bitstream Vera Sans Mono','DejaVu Sans Mono','Monaco','Consolas',monospace;
  line-height: 1.4;
  font-weight: 500;
  font-size: 14px;
  color: var(--themeTextColorPrimaryInverted, #FFFFFF);
  fill: var(--themeTextColorPrimaryInverted, #FFFFFF);
  text-align: inherit;
}

<CodeSnippet>
  <SpacingBox
    bgColor="#1B2029"
    className="emotion-0"
    side="all"
    spacingSize="m"
    tag="div"
  >
    <Box
      bgColor="#1B2029"
      bgImageOptions={
        {
          "position": undefined,
          "repeat": undefined,
          "size": undefined,
        }
      }
      className="emotion-1"
      data-cy="spacingBox"
      tag="div"
    >
      <div
        className="emotion-2"
        data-cy="spacingBox"
      >
        <Flex>
          <div
            className="emotion-3"
            data-cy="flex"
          >
            <FlexItem>
              <div
                className="emotion-4"
                data-cy="flexItem"
              >
                <MonospaceText
                  align="inherit"
                  color="var(--themeTextColorPrimaryInverted, #FFFFFF)"
                  size="m"
                  tag="code"
                  weight="medium"
                  wrap="wrap"
                >
                  <Text
                    align="inherit"
                    className="emotion-5"
                    color="var(--themeTextColorPrimaryInverted, #FFFFFF)"
                    data-cy="monospaceText"
                    size="m"
                    tag="code"
                    weight="medium"
                    wrap="wrap"
                  >
                    <code
                      className="rmTextMargins emotion-6"
                      data-cy="monospaceText"
                    >
                      snippet content
                    </code>
                  </Text>
                </MonospaceText>
              </div>
            </FlexItem>
          </div>
        </Flex>
      </div>
    </Box>
  </SpacingBox>
</CodeSnippet>
`;

exports[`CodeSnippet renders with copy button 1`] = `
.emotion-0 {
  overflow: auto;
  white-space: pre;
}

.emotion-1 {
  overflow: auto;
  white-space: pre;
  padding: 16px;
}

.emotion-2 {
  background-color: #1B2029;
  background-repeat: no-repeat;
  overflow: auto;
  white-space: pre;
  padding: 16px;
}

.emotion-3 {
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  height: auto;
  -webkit-box-flex-wrap: nowrap;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
  -webkit-column-gap: 0;
  column-gap: 0;
  row-gap: 0;
}

.emotion-3>div {
  width: auto;
}

@supports not (column-gap: 1px) {
  .emotion-3>*:not(:last-child) {
    padding-right: 0;
  }
}

@supports not (row-gap: 1px) {
  .emotion-3>*:not(:last-child) {
    padding-bottom: 0;
  }
}

.emotion-4 {
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
}

.emotion-5 {
  font-family: 'Menlo','Bitstream Vera Sans Mono','DejaVu Sans Mono','Monaco','Consolas',monospace;
}

.emotion-6 {
  font-family: 'Menlo','Bitstream Vera Sans Mono','DejaVu Sans Mono','Monaco','Consolas',monospace;
  line-height: 1.4;
  font-weight: 500;
  font-size: 14px;
  color: var(--themeTextColorPrimaryInverted, #FFFFFF);
  fill: var(--themeTextColorPrimaryInverted, #FFFFFF);
  text-align: inherit;
}

.emotion-7 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
}

.emotion-8 {
  background-repeat: no-repeat;
  display: inline-block;
}

.emotion-9 {
  cursor: pointer;
}

.emotion-10 {
  background-repeat: no-repeat;
  display: inline-block;
  cursor: pointer;
}

.emotion-11 {
  vertical-align: middle;
  fill: var(--themeTextColorPrimaryInverted, #FFFFFF);
}

.emotion-11 use {
  pointer-events: none;
}

<CodeSnippet
  textToCopy="snippet content"
>
  <SpacingBox
    bgColor="#1B2029"
    className="emotion-0"
    side="all"
    spacingSize="m"
    tag="div"
  >
    <Box
      bgColor="#1B2029"
      bgImageOptions={
        {
          "position": undefined,
          "repeat": undefined,
          "size": undefined,
        }
      }
      className="emotion-1"
      data-cy="spacingBox"
      tag="div"
    >
      <div
        className="emotion-2"
        data-cy="spacingBox"
      >
        <Flex>
          <div
            className="emotion-3"
            data-cy="flex"
          >
            <FlexItem>
              <div
                className="emotion-4"
                data-cy="flexItem"
              >
                <MonospaceText
                  align="inherit"
                  color="var(--themeTextColorPrimaryInverted, #FFFFFF)"
                  size="m"
                  tag="code"
                  weight="medium"
                  wrap="wrap"
                >
                  <Text
                    align="inherit"
                    className="emotion-5"
                    color="var(--themeTextColorPrimaryInverted, #FFFFFF)"
                    data-cy="monospaceText"
                    size="m"
                    tag="code"
                    weight="medium"
                    wrap="wrap"
                  >
                    <code
                      className="rmTextMargins emotion-6"
                      data-cy="monospaceText"
                    >
                      snippet content
                    </code>
                  </Text>
                </MonospaceText>
              </div>
            </FlexItem>
            <FlexItem
              flex="shrink"
            >
              <div
                className="emotion-7"
                data-cy="flexItem"
              >
                <ClickToCopyButton
                  color="var(--themeTextColorPrimaryInverted, #FFFFFF)"
                  textToCopy="snippet content"
                  tooltipContent="Copied to clipboard"
                >
                  <ClickToCopy
                    textToCopy="snippet content"
                    tooltipContent="Copied to clipboard"
                  >
                    <Box
                      bgImageOptions={
                        {
                          "position": undefined,
                          "repeat": undefined,
                          "size": undefined,
                        }
                      }
                      data-cy="box"
                      display="inline-block"
                      tag="div"
                    >
                      <div
                        className="emotion-8"
                        data-cy="box"
                      >
                        <Tooltip
                          id="copyTooltip1"
                          isOpen={false}
                          suppress={true}
                          trigger={
                            <Clickable
                              action={[Function]}
                              disableFocusOutline={false}
                              role="button"
                              tabIndex={0}
                            >
                              <Box
                                bgImageOptions={
                                  {
                                    "position": undefined,
                                    "repeat": undefined,
                                    "size": undefined,
                                  }
                                }
                                data-cy="box"
                                display="inline-block"
                                tag="span"
                              >
                                <Icon
                                  color="var(--themeTextColorPrimaryInverted, #FFFFFF)"
                                  shape="system-clipboard"
                                />
                              </Box>
                            </Clickable>
                          }
                        >
                          <span
                            data-cy="tooltip"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onMouseLeave={[Function]}
                            onMouseOver={[Function]}
                          >
                            <Dropdownable
                              dropdown={
                                <TooltipContent
                                  id="copyTooltip1"
                                  isOpen={false}
                                  maxWidth={300}
                                >
                                  Copied to clipboard
                                </TooltipContent>
                              }
                              isOpen={false}
                              preferredDirections={
                                [
                                  "top",
                                  "top-start",
                                  "top-end",
                                  "bottom",
                                  "bottom-start",
                                  "bottom-end",
                                ]
                              }
                            >
                              <div>
                                <Clickable
                                  action={[Function]}
                                  disableFocusOutline={false}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <Box
                                    bgImageOptions={
                                      {
                                        "position": undefined,
                                        "repeat": undefined,
                                        "size": undefined,
                                      }
                                    }
                                    className="emotion-9"
                                    data-cy="box"
                                    display="inline-block"
                                    onClick={[Function]}
                                    onKeyPress={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    tag="span"
                                  >
                                    <span
                                      className="emotion-10"
                                      data-cy="box"
                                      onClick={[Function]}
                                      onKeyPress={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      <Icon
                                        color="var(--themeTextColorPrimaryInverted, #FFFFFF)"
                                        shape="system-clipboard"
                                      >
                                        <svg
                                          aria-label="system-clipboard icon"
                                          className="emotion-11"
                                          data-cy="icon"
                                          height={24}
                                          preserveAspectRatio="xMinYMin meet"
                                          role="img"
                                          viewBox="0 0 24 24"
                                          width={24}
                                        >
                                          <use
                                            xlinkHref="#system-clipboard"
                                          />
                                        </svg>
                                      </Icon>
                                    </span>
                                  </Box>
                                </Clickable>
                              </div>
                            </Dropdownable>
                          </span>
                        </Tooltip>
                      </div>
                    </Box>
                  </ClickToCopy>
                </ClickToCopyButton>
              </div>
            </FlexItem>
          </div>
        </Flex>
      </div>
    </Box>
  </SpacingBox>
</CodeSnippet>
`;
