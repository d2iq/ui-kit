// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdownable is visible after opening 1`] = `
.emotion-0 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #FFFFFF;
  fill: #FFFFFF;
  background-color: #7D58FF;
  border-radius: 4px;
  padding: 10px 18px;
  cursor: pointer;
  display: inline-block;
  outline: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-weight: 500;
}

.emotion-0::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-0[href],
.emotion-0[href]:visited {
  color: #FFFFFF;
  fill: #FFFFFF;
}

.emotion-0:hover {
  background-color: #704fe5;
}

.emotion-0:active {
  background-color: #6446cc;
}

<Dropdownable
  dropdown={
    <p>
      I'm a touchdown
    </p>
  }
  isOpen={false}
>
  <div>
    <PrimaryButton>
      <ButtonBase
        appearance="primary"
        data-cy="primaryButton"
      >
        <FocusStyleManager
          focusEnabledClass="css-xcotv6"
        >
          <button
            className="emotion-0"
            data-cy="primaryButton"
            onClick={[Function]}
            tabIndex={0}
            type="button"
          >
            <span>
              Click me
            </span>
          </button>
        </FocusStyleManager>
      </ButtonBase>
    </PrimaryButton>
  </div>
</Dropdownable>
`;

exports[`Dropdownable is visible after opening 2`] = `
.emotion-0 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #FFFFFF;
  fill: #FFFFFF;
  background-color: #7D58FF;
  border-radius: 4px;
  padding: 10px 18px;
  cursor: pointer;
  display: inline-block;
  outline: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-weight: 500;
}

.emotion-0::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-0[href],
.emotion-0[href]:visited {
  color: #FFFFFF;
  fill: #FFFFFF;
}

.emotion-0:hover {
  background-color: #704fe5;
}

.emotion-0:active {
  background-color: #6446cc;
}

<Dropdownable
  dropdown={
    <p>
      I'm a touchdown
    </p>
  }
  isOpen={true}
>
  <div>
    <PrimaryButton>
      <ButtonBase
        appearance="primary"
        data-cy="primaryButton"
      >
        <FocusStyleManager
          focusEnabledClass="css-xcotv6"
        >
          <button
            className="emotion-0"
            data-cy="primaryButton"
            onClick={[Function]}
            tabIndex={0}
            type="button"
          >
            <span>
              Click me
            </span>
          </button>
        </FocusStyleManager>
      </ButtonBase>
    </PrimaryButton>
  </div>
  <clickOutside(DropdownContents)
    isOpen={true}
  >
    <DropdownContents
      isOpen={true}
    >
      <ForwardRef
        style={
          Object {
            "left": "0",
            "position": "absolute",
            "top": "0",
            "zIndex": 2,
          }
        }
      >
        <Overlay
          innerRef={[Function]}
          overlayRoot={
            <body>
              <div>
                <div
                  style="z-index: 2; position: absolute; left: 0px; top: 0px;"
                >
                  <p>
                    I'm a touchdown
                  </p>
                </div>
              </div>
            </body>
          }
          style={
            Object {
              "left": "0",
              "position": "absolute",
              "top": "0",
              "zIndex": 2,
            }
          }
        >
          <Portal
            containerInfo={
              <div>
                <div
                  style="z-index: 2; position: absolute; left: 0px; top: 0px;"
                >
                  <p>
                    I'm a touchdown
                  </p>
                </div>
              </div>
            }
          >
            <div
              style={
                Object {
                  "left": "0",
                  "position": "absolute",
                  "top": "0",
                  "zIndex": 2,
                }
              }
            >
              <p>
                I'm a touchdown
              </p>
            </div>
          </Portal>
        </Overlay>
      </ForwardRef>
    </DropdownContents>
  </clickOutside(DropdownContents)>
</Dropdownable>
`;
