// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sidebar renders 1`] = `
.emotion-0 {
  display: block;
  width: 100%;
}

.emotion-1 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  display: block;
  width: 100%;
  cursor: pointer;
}

.emotion-1::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-1>div:focus {
  outline: none;
}

.emotion-1:focus>div {
  outline-color: Highlight;
  outline-width: thin;
}

@media (-webkit-min-device-pixel-ratio: 0) {
  .emotion-1:focus>div {
    outline-color: -webkit-focus-ring-color;
    outline-style: auto;
    outline-width: unset;
  }
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-flex-wrap: nowrap;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
  -webkit-column-gap: 0;
  column-gap: 0;
  row-gap: 0;
}

.emotion-2>div {
  width: auto;
}

@supports (column-gap: 1px) and (row-gap: 1px) {
  .emotion-2>*:not(:last-child) {
    padding-right: 0;
    padding-bottom: 0;
  }
}

.emotion-3 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
}

.emotion-4 {
  vertical-align: middle;
  fill: currentColor;
}

.emotion-4 use {
  pointer-events: none;
}

.emotion-5 {
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
}

<Expandable
  indicatorPosition="left"
  isOpen={true}
  label="Label"
>
  <Toggle
    defaultOn={true}
    onToggle={[Function]}
  >
    <div>
      <ResetButton
        aria-expanded={true}
        className="emotion-0"
        onClick={[Function]}
        tabIndex={0}
      >
        <button
          aria-expanded={true}
          className="emotion-1"
          onClick={[Function]}
          tabIndex={0}
          type="button"
        >
          <div
            tabIndex={-1}
          >
            <Flex
              align="center"
              direction="row"
              gutterSize="none"
              justify="flex-start"
              wrap="nowrap"
            >
              <div
                className="emotion-2"
                data-cy="flex"
              >
                <FlexItem
                  flex="shrink"
                >
                  <div
                    className="emotion-3"
                    data-cy="flexItem"
                  >
                    <Icon
                      shape="system-triangle-down"
                      size="xs"
                    >
                      <svg
                        aria-label="system-triangle-down icon"
                        className="emotion-4"
                        data-cy="icon"
                        height={16}
                        preserveAspectRatio="xMinYMin meet"
                        role="img"
                        viewBox="0 0 16 16"
                        width={16}
                      >
                        <use
                          xlinkHref="#system-triangle-down"
                        />
                      </svg>
                    </Icon>
                  </div>
                </FlexItem>
                <FlexItem
                  flex="grow"
                >
                  <div
                    className="emotion-5"
                    data-cy="flexItem"
                  >
                    Label
                  </div>
                </FlexItem>
              </div>
            </Flex>
          </div>
        </button>
      </ResetButton>
      <div>
        Content
      </div>
    </div>
  </Toggle>
</Expandable>
`;
