// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FullscreenView renders FullscreenView 1`] = `
.emotion-10 {
  height: 100%;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-10 > div {
  width: 100%;
}

.emotion-8 {
  background-color: var(--themeBgSecondary,#F7F8F9);
  box-sizing: border-box;
  border-bottom: 1px solid #DADDE2;
  padding: 32px;
}

.emotion-4 {
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
}

.emotion-9 {
  box-sizing: border-box;
  overflow: auto;
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
  padding: 32px;
}

.emotion-7 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: auto;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
}

.emotion-7 > div {
  width: auto;
}

.emotion-1 {
  text-align: left;
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
}

.emotion-2 {
  text-align: center;
  margin-top: 0;
  margin-bottom: 0;
  padding-bottom: 8px;
  font-size: 18px;
  font-weight: 400;
}

.emotion-3 {
  text-align: center;
  margin-top: 0;
  margin-bottom: 0;
  font-size: 12px;
  font-weight: 400;
  color: #76797E;
  fill: #76797E;
}

.emotion-6 {
  text-align: right;
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
}

.emotion-0 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: var(--themeTextColorInteractive,#7D58FF);
  fill: var(--themeTextColorInteractive,#7D58FF);
  cursor: pointer;
  display: inline-block;
  outline: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-weight: 500;
}

.emotion-0::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-0:hover {
  color: #704fe5;
  fill: #704fe5;
}

.emotion-0:active {
  color: #6446cc;
  fill: #6446cc;
}

.emotion-5 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #FFFFFF;
  fill: #FFFFFF;
  background-color: #7D58FF;
  border-radius: 4px;
  padding: 10px 18px;
  cursor: pointer;
  display: inline-block;
  outline: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-weight: 500;
}

.emotion-5::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-5:hover {
  background-color: #704fe5;
}

.emotion-5:active {
  background-color: #6446cc;
}

<FullscreenView
  closeText="Close"
  ctaButton={
    <PrimaryButton>
      CTA
    </PrimaryButton>
  }
  onClose={[MockFunction]}
  title="Title"
>
  <div
    className="emotion-10"
  >
    <div
      className="emotion-8"
      data-cy="fullscreenView-header"
    >
      <Delegate
        default={[Function]}
        passDefault={true}
        props={
          Object {
            "closeText": "Close",
            "ctaButton": <PrimaryButton>
              CTA
            </PrimaryButton>,
            "onClose": [MockFunction],
            "subtitle": undefined,
            "title": "Title",
          }
        }
      >
        <FullscreenModalHeader
          closeText="Close"
          ctaButton={
            <PrimaryButton>
              CTA
            </PrimaryButton>
          }
          onClose={[MockFunction]}
          title="Title"
        >
          <div
            className="emotion-7"
          >
            <div
              className="emotion-1"
            >
              <SecondaryButton
                onClick={[MockFunction]}
              >
                <ButtonBase
                  appearance="secondary"
                  data-cy="secondaryButton"
                  onClick={[MockFunction]}
                >
                  <FocusStyleManager
                    focusEnabledClass="css-1h85cd2"
                  >
                    <button
                      className="emotion-0"
                      data-cy="secondaryButton"
                      onClick={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      <span
                        className=""
                      >
                        Close
                      </span>
                    </button>
                  </FocusStyleManager>
                </ButtonBase>
              </SecondaryButton>
            </div>
            <div
              className="emotion-4"
            >
              <h2
                className="emotion-2"
              >
                Title
              </h2>
              <h3
                className="emotion-3"
              />
            </div>
            <div
              className="emotion-6"
            >
              <PrimaryButton>
                <ButtonBase
                  appearance="primary"
                  data-cy="primaryButton"
                >
                  <FocusStyleManager
                    focusEnabledClass="css-xcotv6"
                  >
                    <button
                      className="emotion-5"
                      data-cy="primaryButton"
                      onClick={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      <span
                        className=""
                      >
                        CTA
                      </span>
                    </button>
                  </FocusStyleManager>
                </ButtonBase>
              </PrimaryButton>
            </div>
          </div>
        </FullscreenModalHeader>
      </Delegate>
    </div>
    <div
      className="emotion-9"
      data-cy="fullscreenView-content"
    >
      <div
        tabIndex={0}
      >
        I am modal content
      </div>
    </div>
  </div>
</FullscreenView>
`;
