// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Modal DialogModal renders DialogModal 1`] = `
.emotion-0 {
  background-color: rgba(0,0,0,0.2);
  bottom: 0;
  left: 0;
  position: fixed;
  top: 0;
  right: 0;
  z-index: 0;
  -webkit-transition: opacity 250ms ease-in-out;
  transition: opacity 250ms ease-in-out;
  opacity: 0;
  opacity: 1;
}

.emotion-14 {
  border-radius: 6px;
  background-color: #FFF;
  left: 50%;
  max-height: calc(100vh - 48px);
  outline: none;
  position: fixed;
  top: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1;
  width: 350px;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
  -webkit-transition: opacity 250ms ease-in-out, -webkit-transform 250ms ease-in-out;
  -webkit-transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;
  transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;
  opacity: 0;
  -webkit-transform: translate(-50%,calc(-50% - 50px));
  -ms-transform: translate(-50%,calc(-50% - 50px));
  transform: translate(-50%,calc(-50% - 50px));
  opacity: 1;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

@media (min-width:600px) {
  .emotion-14 {
    width: 450px;
  }
}

@media (min-width:900px) {
  .emotion-14 {
    width: 500px;
  }
}

@media (min-width:1200px) {
  .emotion-14 {
    width: 550px;
  }
}

.emotion-13 {
  height: 100%;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
}

.emotion-11 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-8 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
}

.emotion-5 {
  border-bottom: 1px solid #DADDE2;
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
}

.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 24px;
}

.emotion-1 {
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
  font-size: 18px;
}

.emotion-3 {
  cursor: pointer;
  display: inherit;
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
}

.emotion-3:focus-within {
  outline: -webkit-focus-ring-color auto 5px;
}

.emotion-3 [role="button"]:-moz-focusring {
  outline: 1px dotted black;
}

.emotion-6 {
  overflow: auto;
  padding: 24px;
}

.emotion-12 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  padding: 24px;
}

.emotion-2 {
  display: inherit;
}

.emotion-2:focus {
  outline: 0;
}

.emotion-7 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #7D58FF;
  fill: #7D58FF;
  cursor: pointer;
  outline: none;
  font-weight: 500;
}

.emotion-7::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-7:hover {
  color: #704FE5;
  fill: #704FE5;
}

.emotion-7:active {
  color: #6446CC;
  fill: #6446CC;
}

.emotion-9 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #FFF;
  fill: #FFF;
  background-color: #7D58FF;
  border-radius: 4px;
  padding: 10px 18px;
  cursor: pointer;
  outline: none;
  font-weight: 500;
}

.emotion-9::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-9:hover {
  background-color: #704FE5;
}

.emotion-9:active {
  background-color: #6446CC;
}

<DialogModalWithFooter
  closeText="Close"
  ctaButton={
    <PrimaryButton>
      CTA
    </PrimaryButton>
  }
  isOpen={true}
  onClose={[MockFunction]}
  title="Title"
>
  <DialogModal
    footerContent={
      <div
        className="emotion-11"
      >
        <div
          className="emotion-8"
        >
          <SecondaryButton
            onClick={[MockFunction]}
          >
            Close
          </SecondaryButton>
        </div>
        <div
          className="emotion-8"
        >
          <PrimaryButton>
            CTA
          </PrimaryButton>
        </div>
      </div>
    }
    isOpen={true}
    onClose={[MockFunction]}
    title="Title"
  >
    <ModalBase
      isAnimated={true}
      isOpen={true}
      onClose={[MockFunction]}
    >
      <Transition
        appear={false}
        enter={true}
        exit={true}
        in={true}
        mountOnEnter={false}
        onEnter={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExit={[Function]}
        onExited={[Function]}
        onExiting={[Function]}
        timeout={
          Object {
            "enter": 0,
            "exit": 250,
          }
        }
        unmountOnExit={true}
      >
        <Overlay
          overlayRoot={
            <body>
              <div>
                <div>
                  <div
                    class="emotion-0"
                  />
                  <div
                    class="emotion-14"
                    role="dialog"
                    tabindex="-1"
                  >
                    <div
                      class="emotion-13"
                    >
                      <div
                        tabindex="0"
                      >
                        I am modal content
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              .emotion-0 {
  background-color: rgba(0,0,0,0.2);
  bottom: 0;
  left: 0;
  position: fixed;
  top: 0;
  right: 0;
  z-index: 0;
  -webkit-transition: opacity 250ms ease-in-out;
  transition: opacity 250ms ease-in-out;
  opacity: 0;
  opacity: 1;
}

.emotion-2 {
  border-radius: 6px;
  background-color: #FFF;
  left: 50%;
  max-height: calc(100vh - 48px);
  outline: none;
  position: fixed;
  top: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1;
  width: 350px;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
  -webkit-transition: opacity 250ms ease-in-out, -webkit-transform 250ms ease-in-out;
  -webkit-transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;
  transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;
  opacity: 0;
  -webkit-transform: translate(-50%,calc(-50% - 50px));
  -ms-transform: translate(-50%,calc(-50% - 50px));
  transform: translate(-50%,calc(-50% - 50px));
  opacity: 1;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

@media (min-width:600px) {
  .emotion-2 {
    width: 450px;
  }
}

@media (min-width:900px) {
  .emotion-2 {
    width: 500px;
  }
}

@media (min-width:1200px) {
  .emotion-2 {
    width: 550px;
  }
}

.emotion-1 {
  height: 100%;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
}

<div>
                <div>
                  <div
                    class="emotion-0"
                  />
                  <div
                    class="emotion-2"
                    role="dialog"
                    tabindex="-1"
                  >
                    <div
                      class="emotion-1"
                    >
                      <div
                        tabindex="0"
                      >
                        I am modal content
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              .emotion-0 {
  background-color: rgba(0,0,0,0.2);
  bottom: 0;
  left: 0;
  position: fixed;
  top: 0;
  right: 0;
  z-index: 0;
  -webkit-transition: opacity 250ms ease-in-out;
  transition: opacity 250ms ease-in-out;
  opacity: 0;
  opacity: 1;
}

.emotion-16 {
  border-radius: 6px;
  background-color: #FFF;
  left: 50%;
  max-height: calc(100vh - 48px);
  outline: none;
  position: fixed;
  top: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1;
  width: 350px;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
  -webkit-transition: opacity 250ms ease-in-out, -webkit-transform 250ms ease-in-out;
  -webkit-transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;
  transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;
  opacity: 0;
  -webkit-transform: translate(-50%,calc(-50% - 50px));
  -ms-transform: translate(-50%,calc(-50% - 50px));
  transform: translate(-50%,calc(-50% - 50px));
  opacity: 1;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

@media (min-width:600px) {
  .emotion-16 {
    width: 450px;
  }
}

@media (min-width:900px) {
  .emotion-16 {
    width: 500px;
  }
}

@media (min-width:1200px) {
  .emotion-16 {
    width: 550px;
  }
}

.emotion-15 {
  height: 100%;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
}

.emotion-13 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-9 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
}

.emotion-5 {
  border-bottom: 1px solid #DADDE2;
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
}

.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 24px;
}

.emotion-1 {
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
  font-size: 18px;
}

.emotion-3 {
  cursor: pointer;
  display: inherit;
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
}

.emotion-3:focus-within {
  outline: -webkit-focus-ring-color auto 5px;
}

.emotion-3 [role="button"]:-moz-focusring {
  outline: 1px dotted black;
}

.emotion-6 {
  overflow: auto;
  padding: 24px;
}

.emotion-14 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  padding: 24px;
}

.emotion-2 {
  display: inherit;
}

.emotion-2:focus {
  outline: 0;
}

.emotion-8 {
  outline: none;
  position: relative;
}

.emotion-8:focus {
  background-color: transparent;
}

.emotion-8:focus:after {
  border: 2px solid #704FE5;
  border-radius: 6px;
  bottom: -3px;
  content: "";
  left: -3px;
  position: absolute;
  right: -3px;
  top: -3px;
}

.emotion-8:focus:after {
  border-radius: 0;
  border-left-width: 0;
  border-right-width: 0;
  border-top-width: 0;
}

.emotion-7 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #7D58FF;
  fill: #7D58FF;
  cursor: pointer;
  outline: none;
  font-weight: 500;
}

.emotion-7::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-7:hover {
  color: #704FE5;
  fill: #704FE5;
}

.emotion-7:active {
  color: #6446CC;
  fill: #6446CC;
}

.emotion-11 {
  outline: none;
  position: relative;
}

.emotion-11:focus {
  background-color: #704FE5;
}

.emotion-11:focus:after {
  border: 2px solid #704FE5;
  border-radius: 6px;
  bottom: -3px;
  content: "";
  left: -3px;
  position: absolute;
  right: -3px;
  top: -3px;
}

.emotion-10 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #FFF;
  fill: #FFF;
  background-color: #7D58FF;
  border-radius: 4px;
  padding: 10px 18px;
  cursor: pointer;
  outline: none;
  font-weight: 500;
}

.emotion-10::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-10:hover {
  background-color: #704FE5;
}

.emotion-10:active {
  background-color: #6446CC;
}

<div>
                <div>
                  <div
                    class="emotion-0"
                  />
                  <div
                    class="emotion-16"
                    role="dialog"
                    tabindex="-1"
                  >
                    <div
                      class="emotion-15"
                    >
                      <div
                        class="emotion-5"
                      >
                        <div
                          class="emotion-4"
                        >
                          <div
                            class="emotion-1"
                          >
                            Title
                          </div>
                          <div
                            class="emotion-3"
                          >
                            <span
                              class="emotion-2"
                              role="button"
                              tabindex="0"
                            >
                              <svg
                                height="16"
                                viewBox="0 0 16 16"
                                width="16"
                              >
                                <path
                                  d="M8 9.237L4.119 13.12 2.88 11.88 6.763 8 2.88 4.119 4.12 2.88 8 6.763l3.881-3.882L13.12 4.12 9.237 8l3.882 3.881-1.238 1.238L8 9.237z"
                                  fill-rule="nonzero"
                                />
                              </svg>
                            </span>
                          </div>
                        </div>
                      </div>
                      <div
                        class="emotion-6"
                      >
                        <div
                          tabindex="0"
                        >
                          I am modal content
                        </div>
                      </div>
                      <div
                        class="emotion-14"
                      >
                        <div
                          class="emotion-13"
                        >
                          <div
                            class="emotion-9"
                          >
                            <button
                              class="emotion-7 emotion-8"
                              tabindex="0"
                            >
                              <span
                                class=""
                              >
                                Close
                              </span>
                            </button>
                          </div>
                          <div
                            class="emotion-9"
                          >
                            <button
                              class="emotion-10 emotion-11"
                              tabindex="0"
                            >
                              <span
                                class=""
                              >
                                CTA
                              </span>
                            </button>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </body>
          }
        >
          <Portal
            containerInfo={
              <div>
                <div>
                  <div
                    class="emotion-0"
                  />
                  <div
                    class="emotion-14"
                    role="dialog"
                    tabindex="-1"
                  >
                    <div
                      class="emotion-13"
                    >
                      <div
                        class="emotion-5"
                      >
                        <div
                          class="emotion-4"
                        >
                          <div
                            class="emotion-1"
                          >
                            Title
                          </div>
                          <div
                            class="emotion-3"
                          >
                            <span
                              class="emotion-2"
                              role="button"
                              tabindex="0"
                            >
                              <svg
                                height="16"
                                viewBox="0 0 16 16"
                                width="16"
                              >
                                <path
                                  d="M8 9.237L4.119 13.12 2.88 11.88 6.763 8 2.88 4.119 4.12 2.88 8 6.763l3.881-3.882L13.12 4.12 9.237 8l3.882 3.881-1.238 1.238L8 9.237z"
                                  fill-rule="nonzero"
                                />
                              </svg>
                            </span>
                          </div>
                        </div>
                      </div>
                      <div
                        class="emotion-6"
                      >
                        <div
                          tabindex="0"
                        >
                          I am modal content
                        </div>
                      </div>
                      <div
                        class="emotion-12"
                      >
                        <div
                          class="emotion-11"
                        >
                          <div
                            class="emotion-8"
                          >
                            <button
                              class="emotion-7 css-14x8wbg"
                              tabindex="0"
                            >
                              <span
                                class=""
                              >
                                Close
                              </span>
                            </button>
                          </div>
                          <div
                            class="emotion-8"
                          >
                            <button
                              class="emotion-9 css-1dqlfdd"
                              tabindex="0"
                            >
                              <span
                                class=""
                              >
                                CTA
                              </span>
                            </button>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            }
          >
            <div>
              <div
                className="emotion-0"
              />
              <FocusTrap
                _createFocusTrap={[Function]}
                active={true}
                className="emotion-14"
                focusTrapOptions={
                  Object {
                    "escapeDeactivates": false,
                    "initialFocus": undefined,
                  }
                }
                onKeyDown={[Function]}
                paused={false}
                role="dialog"
                tabIndex={-1}
                tag="div"
              >
                <div
                  className="emotion-14"
                  onKeyDown={[Function]}
                  role="dialog"
                  tabIndex={-1}
                >
                  <clickOutside(ModalContentsUnwrapped)
                    isOpen={true}
                    onClose={[MockFunction]}
                  >
                    <ModalContentsUnwrapped
                      isOpen={true}
                      onClose={[MockFunction]}
                    >
                      <div
                        className="emotion-13"
                      >
                        <div
                          className="emotion-5"
                        >
                          <div
                            className="emotion-4"
                          >
                            <div
                              className="emotion-1"
                            >
                              Title
                            </div>
                            <div
                              className="emotion-3"
                            >
                              <Clickable
                                action={[MockFunction]}
                                role="button"
                                tabIndex={0}
                              >
                                <span
                                  className="emotion-2"
                                  onClick={[MockFunction]}
                                  onKeyPress={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <Component>
                                    <svg
                                      height="16"
                                      viewBox="0 0 16 16"
                                      width="16"
                                    >
                                      <path
                                        d="M8 9.237L4.119 13.12 2.88 11.88 6.763 8 2.88 4.119 4.12 2.88 8 6.763l3.881-3.882L13.12 4.12 9.237 8l3.882 3.881-1.238 1.238L8 9.237z"
                                        fillRule="nonzero"
                                      />
                                    </svg>
                                  </Component>
                                </span>
                              </Clickable>
                            </div>
                          </div>
                        </div>
                        <div
                          className="emotion-6"
                        >
                          <div
                            tabIndex={0}
                          >
                            I am modal content
                          </div>
                        </div>
                        <div
                          className="emotion-12"
                        >
                          <div
                            className="emotion-11"
                          >
                            <div
                              className="emotion-8"
                            >
                              <SecondaryButton
                                onClick={[MockFunction]}
                              >
                                <ButtonBase
                                  appearance="secondary"
                                  onClick={[MockFunction]}
                                >
                                  <FocusStyleManager
                                    focusEnabledClass="css-14x8wbg"
                                  >
                                    <button
                                      className="emotion-7"
                                      onClick={[Function]}
                                      tabIndex={0}
                                    >
                                      <span
                                        className=""
                                      >
                                        Close
                                      </span>
                                    </button>
                                  </FocusStyleManager>
                                </ButtonBase>
                              </SecondaryButton>
                            </div>
                            <div
                              className="emotion-8"
                            >
                              <PrimaryButton>
                                <ButtonBase
                                  appearance="primary"
                                >
                                  <FocusStyleManager
                                    focusEnabledClass="css-1dqlfdd"
                                  >
                                    <button
                                      className="emotion-9"
                                      onClick={[Function]}
                                      tabIndex={0}
                                    >
                                      <span
                                        className=""
                                      >
                                        CTA
                                      </span>
                                    </button>
                                  </FocusStyleManager>
                                </ButtonBase>
                              </PrimaryButton>
                            </div>
                          </div>
                        </div>
                      </div>
                    </ModalContentsUnwrapped>
                  </clickOutside(ModalContentsUnwrapped)>
                </div>
              </FocusTrap>
            </div>
          </Portal>
        </Overlay>
      </Transition>
    </ModalBase>
  </DialogModal>
</DialogModalWithFooter>
`;

exports[`Modal FullscreenModal renders FullscreenModal 1`] = `
.emotion-0 {
  background-color: rgba(0,0,0,0.2);
  bottom: 0;
  left: 0;
  position: fixed;
  top: 0;
  right: 0;
  z-index: 0;
}

.emotion-11 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
}

.emotion-12 {
  height: 100%;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
}

.emotion-5 {
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
}

.emotion-1 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #7D58FF;
  fill: #7D58FF;
  cursor: pointer;
  outline: none;
  font-weight: 500;
}

.emotion-1::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-1:hover {
  color: #704FE5;
  fill: #704FE5;
}

.emotion-1:active {
  color: #6446CC;
  fill: #6446CC;
}

.emotion-6 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #FFF;
  fill: #FFF;
  background-color: #7D58FF;
  border-radius: 4px;
  padding: 10px 18px;
  cursor: pointer;
  outline: none;
  font-weight: 500;
}

.emotion-6::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-6:hover {
  background-color: #704FE5;
}

.emotion-6:active {
  background-color: #6446CC;
}

.emotion-9 {
  border-bottom: 1px solid #DADDE2;
  background-color: #F7F8F9;
  padding: 32px;
}

.emotion-10 {
  overflow: auto;
  padding: 32px;
}

.emotion-13 {
  border-radius: 6px;
  background-color: #FFF;
  left: 50%;
  max-height: calc(100vh - 48px);
  outline: none;
  position: fixed;
  top: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1;
  border-radius: 0;
  height: 100vh;
  max-height: 100vh;
  width: 100vw;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
}

.emotion-8 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
}

.emotion-2 {
  text-align: left;
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
}

.emotion-3 {
  text-align: center;
  margin-bottom: 0;
  margin-top: 0;
  padding-bottom: 8px;
  font-size: 18px;
  font-weight: 400;
}

.emotion-4 {
  text-align: center;
  margin-bottom: 0;
  margin-top: 0;
  font-size: 12px;
  font-weight: 400;
  color: #76797E;
  fill: #76797E;
}

.emotion-7 {
  text-align: right;
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
}

<FullscreenModal
  closeText="Close"
  ctaButton={
    <PrimaryButton>
      CTA
    </PrimaryButton>
  }
  isOpen={true}
  onClose={[MockFunction]}
  title="Title"
>
  <ModalBase
    isAnimated={false}
    isOpen={true}
    onClose={[MockFunction]}
    size="fullscreen"
  >
    <Transition
      appear={false}
      enter={true}
      exit={true}
      in={true}
      mountOnEnter={false}
      onEnter={[Function]}
      onEntered={[Function]}
      onEntering={[Function]}
      onExit={[Function]}
      onExited={[Function]}
      onExiting={[Function]}
      timeout={
        Object {
          "enter": 0,
          "exit": 250,
        }
      }
      unmountOnExit={true}
    >
      <Overlay
        overlayRoot={
          <body>
            <div>
              <div>
                <div
                  class="css-1ryjkt3"
                />
                <div
                  class="css-1w93b6n"
                  role="dialog"
                  tabindex="-1"
                >
                  <div
                    class="emotion-12"
                  >
                    <div
                      tabindex="0"
                    >
                      I am modal content
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div>
              <div>
                <div
                  class="css-1ryjkt3"
                />
                <div
                  class="css-1w93b6n"
                  role="dialog"
                  tabindex="-1"
                >
                  <div
                    class="emotion-12"
                  >
                    <div
                      tabindex="0"
                    >
                      I am modal content
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div>
              <div>
                <div
                  class="css-1ryjkt3"
                />
                <div
                  class="css-1w93b6n"
                  role="dialog"
                  tabindex="-1"
                >
                  <div
                    class="emotion-12"
                  >
                    <div
                      class="css-1n2j8fb"
                    >
                      <div
                        class="css-15b9cs"
                      >
                        <div
                          class="css-95z8m4"
                        >
                          Title
                        </div>
                        <div
                          class="css-6nx4bk"
                        >
                          <span
                            class="css-ms94x0"
                            role="button"
                            tabindex="0"
                          >
                            <svg
                              height="16"
                              viewBox="0 0 16 16"
                              width="16"
                            >
                              <path
                                d="M8 9.237L4.119 13.12 2.88 11.88 6.763 8 2.88 4.119 4.12 2.88 8 6.763l3.881-3.882L13.12 4.12 9.237 8l3.882 3.881-1.238 1.238L8 9.237z"
                                fill-rule="nonzero"
                              />
                            </svg>
                          </span>
                        </div>
                      </div>
                    </div>
                    <div
                      class="css-1e3fso6"
                    >
                      <div
                        tabindex="0"
                      >
                        I am modal content
                      </div>
                    </div>
                    <div
                      class="css-92qutk"
                    >
                      <div
                        class="css-ysk5k7"
                      >
                        <div
                          class="css-48ylac"
                        >
                          <button
                            class="emotion-1 css-14x8wbg"
                            tabindex="0"
                          >
                            <span
                              class=""
                            >
                              Close
                            </span>
                          </button>
                        </div>
                        <div
                          class="css-48ylac"
                        >
                          <button
                            class="emotion-6 css-1dqlfdd"
                            tabindex="0"
                          >
                            <span
                              class=""
                            >
                              CTA
                            </span>
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            .emotion-0 {
  background-color: rgba(0,0,0,0.2);
  bottom: 0;
  left: 0;
  position: fixed;
  top: 0;
  right: 0;
  z-index: 0;
  -webkit-transition: opacity 250ms ease-in-out;
  transition: opacity 250ms ease-in-out;
  opacity: 0;
  opacity: 1;
}

.emotion-16 {
  border-radius: 6px;
  background-color: #FFF;
  left: 50%;
  max-height: calc(100vh - 48px);
  outline: none;
  position: fixed;
  top: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1;
  width: 350px;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
  -webkit-transition: opacity 250ms ease-in-out, -webkit-transform 250ms ease-in-out;
  -webkit-transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;
  transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;
  opacity: 0;
  -webkit-transform: translate(-50%,calc(-50% - 50px));
  -ms-transform: translate(-50%,calc(-50% - 50px));
  transform: translate(-50%,calc(-50% - 50px));
  opacity: 1;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

@media (min-width:600px) {
  .emotion-16 {
    width: 450px;
  }
}

@media (min-width:900px) {
  .emotion-16 {
    width: 500px;
  }
}

@media (min-width:1200px) {
  .emotion-16 {
    width: 550px;
  }
}

.emotion-15 {
  height: 100%;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
}

.emotion-13 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-9 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
}

.emotion-5 {
  border-bottom: 1px solid #DADDE2;
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
}

.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 24px;
}

.emotion-1 {
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
  font-size: 18px;
}

.emotion-3 {
  cursor: pointer;
  display: inherit;
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
}

.emotion-3:focus-within {
  outline: -webkit-focus-ring-color auto 5px;
}

.emotion-3 [role="button"]:-moz-focusring {
  outline: 1px dotted black;
}

.emotion-6 {
  overflow: auto;
  padding: 24px;
}

.emotion-14 {
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
  padding: 24px;
}

.emotion-2 {
  display: inherit;
}

.emotion-2:focus {
  outline: 0;
}

.emotion-8 {
  outline: none;
  position: relative;
}

.emotion-8:focus {
  background-color: transparent;
}

.emotion-8:focus:after {
  border: 2px solid #704FE5;
  border-radius: 6px;
  bottom: -3px;
  content: "";
  left: -3px;
  position: absolute;
  right: -3px;
  top: -3px;
}

.emotion-8:focus:after {
  border-radius: 0;
  border-left-width: 0;
  border-right-width: 0;
  border-top-width: 0;
}

.emotion-7 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #7D58FF;
  fill: #7D58FF;
  cursor: pointer;
  outline: none;
  font-weight: 500;
}

.emotion-7::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-7:hover {
  color: #704FE5;
  fill: #704FE5;
}

.emotion-7:active {
  color: #6446CC;
  fill: #6446CC;
}

.emotion-11 {
  outline: none;
  position: relative;
}

.emotion-11:focus {
  background-color: #704FE5;
}

.emotion-11:focus:after {
  border: 2px solid #704FE5;
  border-radius: 6px;
  bottom: -3px;
  content: "";
  left: -3px;
  position: absolute;
  right: -3px;
  top: -3px;
}

.emotion-10 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #FFF;
  fill: #FFF;
  background-color: #7D58FF;
  border-radius: 4px;
  padding: 10px 18px;
  cursor: pointer;
  outline: none;
  font-weight: 500;
}

.emotion-10::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-10:hover {
  background-color: #704FE5;
}

.emotion-10:active {
  background-color: #6446CC;
}

<div>
              <div>
                <div
                  class="emotion-0"
                />
                <div
                  class="emotion-16"
                  role="dialog"
                  tabindex="-1"
                >
                  <div
                    class="emotion-15"
                  >
                    <div
                      class="emotion-5"
                    >
                      <div
                        class="emotion-4"
                      >
                        <div
                          class="emotion-1"
                        >
                          Title
                        </div>
                        <div
                          class="emotion-3"
                        >
                          <span
                            class="emotion-2"
                            role="button"
                            tabindex="0"
                          >
                            <svg
                              height="16"
                              viewBox="0 0 16 16"
                              width="16"
                            >
                              <path
                                d="M8 9.237L4.119 13.12 2.88 11.88 6.763 8 2.88 4.119 4.12 2.88 8 6.763l3.881-3.882L13.12 4.12 9.237 8l3.882 3.881-1.238 1.238L8 9.237z"
                                fill-rule="nonzero"
                              />
                            </svg>
                          </span>
                        </div>
                      </div>
                    </div>
                    <div
                      class="emotion-6"
                    >
                      <div
                        tabindex="0"
                      >
                        I am modal content
                      </div>
                    </div>
                    <div
                      class="emotion-14"
                    >
                      <div
                        class="emotion-13"
                      >
                        <div
                          class="emotion-9"
                        >
                          <button
                            class="emotion-7 emotion-8"
                            tabindex="0"
                          >
                            <span
                              class=""
                            >
                              Close
                            </span>
                          </button>
                        </div>
                        <div
                          class="emotion-9"
                        >
                          <button
                            class="emotion-10 emotion-11"
                            tabindex="0"
                          >
                            <span
                              class=""
                            >
                              CTA
                            </span>
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            .emotion-0 {
  background-color: rgba(0,0,0,0.2);
  bottom: 0;
  left: 0;
  position: fixed;
  top: 0;
  right: 0;
  z-index: 0;
}

.emotion-13 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
}

.emotion-14 {
  height: 100%;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
}

.emotion-6 {
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
}

.emotion-2 {
  outline: none;
  position: relative;
}

.emotion-2:focus {
  background-color: transparent;
}

.emotion-2:focus:after {
  border: 2px solid #704FE5;
  border-radius: 6px;
  bottom: -3px;
  content: "";
  left: -3px;
  position: absolute;
  right: -3px;
  top: -3px;
}

.emotion-2:focus:after {
  border-radius: 0;
  border-left-width: 0;
  border-right-width: 0;
  border-top-width: 0;
}

.emotion-1 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #7D58FF;
  fill: #7D58FF;
  cursor: pointer;
  outline: none;
  font-weight: 500;
}

.emotion-1::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-1:hover {
  color: #704FE5;
  fill: #704FE5;
}

.emotion-1:active {
  color: #6446CC;
  fill: #6446CC;
}

.emotion-8 {
  outline: none;
  position: relative;
}

.emotion-8:focus {
  background-color: #704FE5;
}

.emotion-8:focus:after {
  border: 2px solid #704FE5;
  border-radius: 6px;
  bottom: -3px;
  content: "";
  left: -3px;
  position: absolute;
  right: -3px;
  top: -3px;
}

.emotion-7 {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  text-align: inherit;
  color: #FFF;
  fill: #FFF;
  background-color: #7D58FF;
  border-radius: 4px;
  padding: 10px 18px;
  cursor: pointer;
  outline: none;
  font-weight: 500;
}

.emotion-7::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.emotion-7:hover {
  background-color: #704FE5;
}

.emotion-7:active {
  background-color: #6446CC;
}

.emotion-11 {
  border-bottom: 1px solid #DADDE2;
  background-color: #F7F8F9;
  padding: 32px;
}

.emotion-12 {
  overflow: auto;
  padding: 32px;
}

.emotion-15 {
  border-radius: 6px;
  background-color: #FFF;
  left: 50%;
  max-height: calc(100vh - 48px);
  outline: none;
  position: fixed;
  top: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1;
  border-radius: 0;
  height: 100vh;
  max-height: 100vh;
  width: 100vw;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
}

.emotion-10 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: initial;
}

.emotion-3 {
  text-align: left;
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
}

.emotion-4 {
  text-align: center;
  margin-bottom: 0;
  margin-top: 0;
  padding-bottom: 8px;
  font-size: 18px;
  font-weight: 400;
}

.emotion-5 {
  text-align: center;
  margin-bottom: 0;
  margin-top: 0;
  font-size: 12px;
  font-weight: 400;
  color: #76797E;
  fill: #76797E;
}

.emotion-9 {
  text-align: right;
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
}

<div>
              <div>
                <div
                  class="emotion-0"
                />
                <div
                  class="emotion-15"
                  role="dialog"
                  tabindex="-1"
                >
                  <div
                    class="emotion-14"
                  >
                    <div
                      class="emotion-13"
                    >
                      <div
                        class="emotion-11"
                      >
                        <div
                          class="emotion-10"
                        >
                          <div
                            class="emotion-3"
                          >
                            <button
                              class="emotion-1 emotion-2"
                              tabindex="0"
                            >
                              <span
                                class=""
                              >
                                Close
                              </span>
                            </button>
                          </div>
                          <div
                            class="emotion-6"
                          >
                            <h2
                              class="emotion-4"
                            >
                              Title
                            </h2>
                            <h3
                              class="emotion-5"
                            />
                          </div>
                          <div
                            class="emotion-9"
                          >
                            <button
                              class="emotion-7 emotion-8"
                              tabindex="0"
                            >
                              <span
                                class=""
                              >
                                CTA
                              </span>
                            </button>
                          </div>
                        </div>
                      </div>
                      <div
                        class="emotion-12"
                      >
                        <div
                          tabindex="0"
                        >
                          I am modal content
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </body>
        }
      >
        <Portal
          containerInfo={
            <div>
              <div>
                <div
                  class="emotion-0"
                />
                <div
                  class="emotion-13"
                  role="dialog"
                  tabindex="-1"
                >
                  <div
                    class="emotion-12"
                  >
                    <div
                      class="emotion-11"
                    >
                      <div
                        class="emotion-9"
                      >
                        <div
                          class="emotion-8"
                        >
                          <div
                            class="emotion-2"
                          >
                            <button
                              class="emotion-1 css-14x8wbg"
                              tabindex="0"
                            >
                              <span
                                class=""
                              >
                                Close
                              </span>
                            </button>
                          </div>
                          <div
                            class="emotion-5"
                          >
                            <h2
                              class="emotion-3"
                            >
                              Title
                            </h2>
                            <h3
                              class="emotion-4"
                            />
                          </div>
                          <div
                            class="emotion-7"
                          >
                            <button
                              class="emotion-6 css-1dqlfdd"
                              tabindex="0"
                            >
                              <span
                                class=""
                              >
                                CTA
                              </span>
                            </button>
                          </div>
                        </div>
                      </div>
                      <div
                        class="emotion-10"
                      >
                        <div
                          tabindex="0"
                        >
                          I am modal content
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          }
        >
          <div>
            <div
              className="emotion-0"
            />
            <FocusTrap
              _createFocusTrap={[Function]}
              active={true}
              className="emotion-13"
              focusTrapOptions={
                Object {
                  "escapeDeactivates": false,
                  "initialFocus": undefined,
                }
              }
              onKeyDown={[Function]}
              paused={false}
              role="dialog"
              tabIndex={-1}
              tag="div"
            >
              <div
                className="emotion-13"
                onKeyDown={[Function]}
                role="dialog"
                tabIndex={-1}
              >
                <clickOutside(ModalContentsUnwrapped)
                  isOpen={true}
                  onClose={[MockFunction]}
                >
                  <ModalContentsUnwrapped
                    isOpen={true}
                    onClose={[MockFunction]}
                  >
                    <div
                      className="emotion-12"
                    >
                      <div
                        className="emotion-11"
                      >
                        <div
                          className="emotion-9"
                        >
                          <Delegate
                            default={[Function]}
                            passDefault={true}
                            props={
                              Object {
                                "closeText": "Close",
                                "ctaButton": <PrimaryButton>
                                  CTA
                                </PrimaryButton>,
                                "onClose": [MockFunction],
                                "subtitle": undefined,
                                "title": "Title",
                              }
                            }
                          >
                            <FullscreenModalHeader
                              closeText="Close"
                              ctaButton={
                                <PrimaryButton>
                                  CTA
                                </PrimaryButton>
                              }
                              onClose={[MockFunction]}
                              title="Title"
                            >
                              <div
                                className="emotion-8"
                              >
                                <div
                                  className="emotion-2"
                                >
                                  <SecondaryButton
                                    onClick={[MockFunction]}
                                  >
                                    <ButtonBase
                                      appearance="secondary"
                                      onClick={[MockFunction]}
                                    >
                                      <FocusStyleManager
                                        focusEnabledClass="css-14x8wbg"
                                      >
                                        <button
                                          className="emotion-1"
                                          onClick={[Function]}
                                          tabIndex={0}
                                        >
                                          <span
                                            className=""
                                          >
                                            Close
                                          </span>
                                        </button>
                                      </FocusStyleManager>
                                    </ButtonBase>
                                  </SecondaryButton>
                                </div>
                                <div
                                  className="emotion-5"
                                >
                                  <h2
                                    className="emotion-3"
                                  >
                                    Title
                                  </h2>
                                  <h3
                                    className="emotion-4"
                                  />
                                </div>
                                <div
                                  className="emotion-7"
                                >
                                  <PrimaryButton>
                                    <ButtonBase
                                      appearance="primary"
                                    >
                                      <FocusStyleManager
                                        focusEnabledClass="css-1dqlfdd"
                                      >
                                        <button
                                          className="emotion-6"
                                          onClick={[Function]}
                                          tabIndex={0}
                                        >
                                          <span
                                            className=""
                                          >
                                            CTA
                                          </span>
                                        </button>
                                      </FocusStyleManager>
                                    </ButtonBase>
                                  </PrimaryButton>
                                </div>
                              </div>
                            </FullscreenModalHeader>
                          </Delegate>
                        </div>
                        <div
                          className="emotion-10"
                        >
                          <div
                            tabIndex={0}
                          >
                            I am modal content
                          </div>
                        </div>
                      </div>
                    </div>
                  </ModalContentsUnwrapped>
                </clickOutside(ModalContentsUnwrapped)>
              </div>
            </FocusTrap>
          </div>
        </Portal>
      </Overlay>
    </Transition>
  </ModalBase>
</FullscreenModal>
`;

exports[`Modal ModalBase renders ModalBase 1`] = `
.emotion-0 {
  background-color: rgba(0,0,0,0.2);
  bottom: 0;
  left: 0;
  position: fixed;
  top: 0;
  right: 0;
  z-index: 0;
  -webkit-transition: opacity 250ms ease-in-out;
  transition: opacity 250ms ease-in-out;
  opacity: 0;
  opacity: 1;
}

.emotion-2 {
  border-radius: 6px;
  background-color: #FFF;
  left: 50%;
  max-height: calc(100vh - 48px);
  outline: none;
  position: fixed;
  top: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1;
  width: 350px;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
  -webkit-transition: opacity 250ms ease-in-out, -webkit-transform 250ms ease-in-out;
  -webkit-transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;
  transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;
  opacity: 0;
  -webkit-transform: translate(-50%,calc(-50% - 50px));
  -ms-transform: translate(-50%,calc(-50% - 50px));
  transform: translate(-50%,calc(-50% - 50px));
  opacity: 1;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

@media (min-width:600px) {
  .emotion-2 {
    width: 450px;
  }
}

@media (min-width:900px) {
  .emotion-2 {
    width: 500px;
  }
}

@media (min-width:1200px) {
  .emotion-2 {
    width: 550px;
  }
}

.emotion-1 {
  height: 100%;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
}

<ModalBase
  isAnimated={true}
  isOpen={true}
  onClose={[MockFunction]}
>
  <Transition
    appear={false}
    enter={true}
    exit={true}
    in={true}
    mountOnEnter={false}
    onEnter={[Function]}
    onEntered={[Function]}
    onEntering={[Function]}
    onExit={[Function]}
    onExited={[Function]}
    onExiting={[Function]}
    timeout={
      Object {
        "enter": 0,
        "exit": 250,
      }
    }
    unmountOnExit={true}
  >
    <Overlay
      overlayRoot={
        .emotion-0 {
  background-color: rgba(0,0,0,0.2);
  bottom: 0;
  left: 0;
  position: fixed;
  top: 0;
  right: 0;
  z-index: 0;
  -webkit-transition: opacity 250ms ease-in-out;
  transition: opacity 250ms ease-in-out;
  opacity: 0;
  opacity: 1;
}

.emotion-2 {
  border-radius: 6px;
  background-color: #FFF;
  left: 50%;
  max-height: calc(100vh - 48px);
  outline: none;
  position: fixed;
  top: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1;
  width: 350px;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
  -webkit-transition: opacity 250ms ease-in-out, -webkit-transform 250ms ease-in-out;
  -webkit-transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;
  transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;
  opacity: 0;
  -webkit-transform: translate(-50%,calc(-50% - 50px));
  -ms-transform: translate(-50%,calc(-50% - 50px));
  transform: translate(-50%,calc(-50% - 50px));
  opacity: 1;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

@media (min-width:600px) {
  .emotion-2 {
    width: 450px;
  }
}

@media (min-width:900px) {
  .emotion-2 {
    width: 500px;
  }
}

@media (min-width:1200px) {
  .emotion-2 {
    width: 550px;
  }
}

.emotion-1 {
  height: 100%;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
}

<body>
          <div>
            <div>
              <div
                class="emotion-0"
              />
              <div
                class="emotion-2"
                role="dialog"
                tabindex="-1"
              >
                <div
                  class="emotion-1"
                >
                  <div
                    tabindex="0"
                  >
                    I am modal content
                  </div>
                </div>
              </div>
            </div>
          </div>
        </body>
      }
    >
      <Portal
        containerInfo={
          <div>
            <div>
              <div
                class="emotion-0"
              />
              <div
                class="emotion-2"
                role="dialog"
                tabindex="-1"
              >
                <div
                  class="emotion-1"
                >
                  <div
                    tabindex="0"
                  >
                    I am modal content
                  </div>
                </div>
              </div>
            </div>
          </div>
        }
      >
        <div>
          <div
            className="emotion-0"
          />
          <FocusTrap
            _createFocusTrap={[Function]}
            active={true}
            className="emotion-2"
            focusTrapOptions={
              Object {
                "escapeDeactivates": false,
                "initialFocus": undefined,
              }
            }
            onKeyDown={[Function]}
            paused={false}
            role="dialog"
            tabIndex={-1}
            tag="div"
          >
            <div
              className="emotion-2"
              onKeyDown={[Function]}
              role="dialog"
              tabIndex={-1}
            >
              <clickOutside(ModalContentsUnwrapped)
                isOpen={true}
                onClose={[MockFunction]}
              >
                <ModalContentsUnwrapped
                  isOpen={true}
                  onClose={[MockFunction]}
                >
                  <div
                    className="emotion-1"
                  >
                    <div
                      tabIndex={0}
                    >
                      I am modal content
                    </div>
                  </div>
                </ModalContentsUnwrapped>
              </clickOutside(ModalContentsUnwrapped)>
            </div>
          </FocusTrap>
        </div>
      </Portal>
    </Overlay>
  </Transition>
</ModalBase>
`;
