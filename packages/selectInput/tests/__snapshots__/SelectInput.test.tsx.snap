// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectInput renders all appearances 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
}

.emotion-1 {
  position: relative;
  border: 1px solid;
  border-radius: 4px;
  color: inherit;
  height: 36px;
  font-size: inherit;
  padding-left: 16px;
  padding-right: 16px;
  background-color: var(--themeBgPrimary, #FFFFFF);
  border-color: var(--themeBorder, #DADDE2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-1::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input {
  font-size: inherit;
  color: inherit;
}

.emotion-1 input::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1:focus {
  background-color: rgba(125,88,255,0.05);
  border-color: var(--themeBrandPrimary, #7D58FF);
}

.emotion-2 {
  background: none;
  border: 0;
  box-shadow: none;
  padding: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  color: inherit;
  font-size: inherit;
  padding-right: 32px;
  width: 100%;
  display: block;
}

.emotion-2:focus {
  outline: 0;
}

.emotion-2:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 var(--themeTextColorPrimary, #1B2029);
}

.emotion-2::-ms-expand {
  display: none;
}

.emotion-3 {
  font-size: 0;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  padding-left: 16px;
  padding-right: 16px;
}

.emotion-3 svg {
  fill: var(--themeTextColorPrimary, #1B2029);
}

.emotion-4 {
  vertical-align: middle;
  fill: inherit;
}

.emotion-4 use {
  pointer-events: none;
}

<div
    data-cy="selectInput selectInput.standard"
  >
    <label
      class="emotion-0"
      data-cy="textInput-label"
      for="layers"
    >
      Atmosphere layer
    </label>
    <span
      class="emotion-1"
    >
      <select
        aria-describedby=""
        aria-invalid="false"
        class="emotion-2"
        data-cy="selectInput-select selectInput-select.standard"
        id="layers"
      >
        <option
          value="exosphere"
        >
          Exosphere
        </option>
        <option
          value="thermosphere"
        >
          Thermosphere
        </option>
        <option
          value="mesosphere"
        >
          Mesosphere
        </option>
        <option
          value="stratosphere"
        >
          Stratosphere
        </option>
        <option
          value="troposphere"
        >
          Troposphere
        </option>
        <option
          disabled=""
          value="disabled"
        >
          Can't touch this
        </option>
      </select>
      <span
        class="emotion-3"
      >
        <svg
          aria-label="system-triangle-down icon"
          class="emotion-4"
          data-cy="icon"
          height="16"
          preserveAspectRatio="xMinYMin meet"
          role="img"
          viewBox="0 0 16 16"
          width="16"
        >
          <use
            xlink:href="#system-triangle-down"
          />
        </svg>
      </span>
    </span>
  </div>
</DocumentFragment>
`;

exports[`SelectInput renders all appearances 2`] = `
<DocumentFragment>
  .emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
  color: var(--themeError, #EB293A);
  fill: var(--themeError, #EB293A);
}

.emotion-1 {
  position: relative;
  border: 1px solid;
  border-radius: 4px;
  color: inherit;
  height: 36px;
  font-size: inherit;
  padding-left: 16px;
  padding-right: 16px;
  background-color: var(--themeBgPrimary, #FFFFFF);
  border-color: var(--themeError, #EB293A);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-1::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input {
  font-size: inherit;
  color: inherit;
}

.emotion-1 input::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1:focus {
  background-color: rgba(235,41,58,0.05);
}

.emotion-2 {
  background: none;
  border: 0;
  box-shadow: none;
  padding: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  color: inherit;
  font-size: inherit;
  padding-right: 32px;
  width: 100%;
  display: block;
}

.emotion-2:focus {
  outline: 0;
}

.emotion-2:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 var(--themeTextColorPrimary, #1B2029);
}

.emotion-2::-ms-expand {
  display: none;
}

.emotion-3 {
  font-size: 0;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  padding-left: 16px;
  padding-right: 16px;
}

.emotion-3 svg {
  fill: var(--themeError, #EB293A);
}

.emotion-4 {
  vertical-align: middle;
  fill: inherit;
}

.emotion-4 use {
  pointer-events: none;
}

<div
    data-cy="selectInput selectInput.error"
  >
    <label
      class="emotion-0"
      data-cy="textInput-label"
      for="layers"
    >
      Atmosphere layer
    </label>
    <span
      class="emotion-1"
    >
      <select
        aria-describedby=""
        aria-invalid="false"
        class="emotion-2"
        data-cy="selectInput-select selectInput-select.error"
        id="layers"
      >
        <option
          value="exosphere"
        >
          Exosphere
        </option>
        <option
          value="thermosphere"
        >
          Thermosphere
        </option>
        <option
          value="mesosphere"
        >
          Mesosphere
        </option>
        <option
          value="stratosphere"
        >
          Stratosphere
        </option>
        <option
          value="troposphere"
        >
          Troposphere
        </option>
        <option
          disabled=""
          value="disabled"
        >
          Can't touch this
        </option>
      </select>
      <span
        class="emotion-3"
      >
        <svg
          aria-label="system-triangle-down icon"
          class="emotion-4"
          data-cy="icon"
          height="16"
          preserveAspectRatio="xMinYMin meet"
          role="img"
          viewBox="0 0 16 16"
          width="16"
        >
          <use
            xlink:href="#system-triangle-down"
          />
        </svg>
      </span>
    </span>
    <div
      data-cy="selectInput-hintContent"
    />
  </div>
</DocumentFragment>
`;

exports[`SelectInput renders all appearances 3`] = `
<DocumentFragment>
  .emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
}

.emotion-1 {
  position: relative;
  border: 1px solid;
  border-radius: 4px;
  color: inherit;
  height: 36px;
  font-size: inherit;
  padding-left: 16px;
  padding-right: 16px;
  background-color: var(--themeBgPrimary, #FFFFFF);
  border-color: var(--themeSuccess, #14C684);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-1::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input {
  font-size: inherit;
  color: inherit;
}

.emotion-1 input::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1:focus {
  background-color: rgba(20,198,132,0.05);
}

.emotion-2 {
  background: none;
  border: 0;
  box-shadow: none;
  padding: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  color: inherit;
  font-size: inherit;
  padding-right: 32px;
  width: 100%;
  display: block;
}

.emotion-2:focus {
  outline: 0;
}

.emotion-2:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 var(--themeTextColorPrimary, #1B2029);
}

.emotion-2::-ms-expand {
  display: none;
}

.emotion-3 {
  font-size: 0;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  padding-left: 16px;
  padding-right: 16px;
}

.emotion-3 svg {
  fill: var(--themeSuccess, #14C684);
}

.emotion-4 {
  vertical-align: middle;
  fill: inherit;
}

.emotion-4 use {
  pointer-events: none;
}

<div
    data-cy="selectInput selectInput.success"
  >
    <label
      class="emotion-0"
      data-cy="textInput-label"
      for="layers"
    >
      Atmosphere layer
    </label>
    <span
      class="emotion-1"
    >
      <select
        aria-describedby=""
        aria-invalid="false"
        class="emotion-2"
        data-cy="selectInput-select selectInput-select.success"
        id="layers"
      >
        <option
          value="exosphere"
        >
          Exosphere
        </option>
        <option
          value="thermosphere"
        >
          Thermosphere
        </option>
        <option
          value="mesosphere"
        >
          Mesosphere
        </option>
        <option
          value="stratosphere"
        >
          Stratosphere
        </option>
        <option
          value="troposphere"
        >
          Troposphere
        </option>
        <option
          disabled=""
          value="disabled"
        >
          Can't touch this
        </option>
      </select>
      <span
        class="emotion-3"
      >
        <svg
          aria-label="system-triangle-down icon"
          class="emotion-4"
          data-cy="icon"
          height="16"
          preserveAspectRatio="xMinYMin meet"
          role="img"
          viewBox="0 0 16 16"
          width="16"
        >
          <use
            xlink:href="#system-triangle-down"
          />
        </svg>
      </span>
    </span>
  </div>
</DocumentFragment>
`;

exports[`SelectInput renders disabled 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
}

.emotion-1 {
  position: relative;
  border: 1px solid;
  border-radius: 4px;
  color: inherit;
  height: 36px;
  font-size: inherit;
  padding-left: 16px;
  padding-right: 16px;
  background-color: var(--themeBgDisabled, #E8EAED);
  border-color: var(--themeBgDisabled, #E8EAED);
  color: var(--themeTextColorDisabled, #AEB0B4);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-1::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input {
  font-size: inherit;
  color: inherit;
}

.emotion-1 input::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::-webkit-input-placeholder {
  color: var(--themeTextColorDisabled, #AEB0B4);
}

.emotion-1::-moz-placeholder {
  color: var(--themeTextColorDisabled, #AEB0B4);
}

.emotion-1:-ms-input-placeholder {
  color: var(--themeTextColorDisabled, #AEB0B4);
}

.emotion-1::placeholder {
  color: var(--themeTextColorDisabled, #AEB0B4);
}

.emotion-1 input {
  color: var(--themeTextColorDisabled, #AEB0B4);
}

.emotion-1 input::-webkit-input-placeholder {
  color: var(--themeTextColorDisabled, #AEB0B4);
}

.emotion-1 input::-moz-placeholder {
  color: var(--themeTextColorDisabled, #AEB0B4);
}

.emotion-1 input:-ms-input-placeholder {
  color: var(--themeTextColorDisabled, #AEB0B4);
}

.emotion-1 input::placeholder {
  color: var(--themeTextColorDisabled, #AEB0B4);
}

.emotion-2 {
  background: none;
  border: 0;
  box-shadow: none;
  padding: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  color: inherit;
  font-size: inherit;
  padding-right: 32px;
  width: 100%;
  display: block;
}

.emotion-2:focus {
  outline: 0;
}

.emotion-2:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 var(--themeTextColorPrimary, #1B2029);
}

.emotion-2::-ms-expand {
  display: none;
}

.emotion-3 {
  font-size: 0;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  padding-left: 16px;
  padding-right: 16px;
}

.emotion-3 svg {
  fill: var(--themeTextColorDisabled, #AEB0B4);
}

.emotion-4 {
  vertical-align: middle;
  fill: inherit;
}

.emotion-4 use {
  pointer-events: none;
}

<div
    data-cy="selectInput selectInput.standard"
  >
    <label
      class="emotion-0"
      data-cy="textInput-label"
      for="layers"
    >
      Atmosphere layer
    </label>
    <span
      class="emotion-1"
    >
      <select
        aria-describedby=""
        aria-invalid="false"
        class="emotion-2"
        data-cy="selectInput-select selectInput-select.standard"
        id="layers"
      >
        <option
          value="exosphere"
        >
          Exosphere
        </option>
        <option
          value="thermosphere"
        >
          Thermosphere
        </option>
        <option
          value="mesosphere"
        >
          Mesosphere
        </option>
        <option
          value="stratosphere"
        >
          Stratosphere
        </option>
        <option
          value="troposphere"
        >
          Troposphere
        </option>
        <option
          disabled=""
          value="disabled"
        >
          Can't touch this
        </option>
      </select>
      <span
        class="emotion-3"
      >
        <svg
          aria-label="system-triangle-down icon"
          class="emotion-4"
          data-cy="icon"
          height="16"
          preserveAspectRatio="xMinYMin meet"
          role="img"
          viewBox="0 0 16 16"
          width="16"
        >
          <use
            xlink:href="#system-triangle-down"
          />
        </svg>
      </span>
    </span>
  </div>
</DocumentFragment>
`;

exports[`SelectInput renders with errors 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
  color: var(--themeError, #EB293A);
  fill: var(--themeError, #EB293A);
}

.emotion-1 {
  position: relative;
  border: 1px solid;
  border-radius: 4px;
  color: inherit;
  height: 36px;
  font-size: inherit;
  padding-left: 16px;
  padding-right: 16px;
  background-color: var(--themeBgPrimary, #FFFFFF);
  border-color: var(--themeError, #EB293A);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-1::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input {
  font-size: inherit;
  color: inherit;
}

.emotion-1 input::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1:focus {
  background-color: rgba(235,41,58,0.05);
}

.emotion-2 {
  background: none;
  border: 0;
  box-shadow: none;
  padding: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  color: inherit;
  font-size: inherit;
  padding-right: 32px;
  width: 100%;
  display: block;
}

.emotion-2:focus {
  outline: 0;
}

.emotion-2:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 var(--themeTextColorPrimary, #1B2029);
}

.emotion-2::-ms-expand {
  display: none;
}

.emotion-3 {
  font-size: 0;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  padding-left: 16px;
  padding-right: 16px;
}

.emotion-3 svg {
  fill: var(--themeError, #EB293A);
}

.emotion-4 {
  vertical-align: middle;
  fill: inherit;
}

.emotion-4 use {
  pointer-events: none;
}

.emotion-5 {
  padding: 0;
  margin: 0;
  font-size: 12px;
  color: var(--themeError, #EB293A);
  fill: var(--themeError, #EB293A);
}

.emotion-6 {
  text-indent: 0;
  list-style-type: none;
  padding-top: 4px;
}

<div
    data-cy="selectInput selectInput.error"
  >
    <label
      class="emotion-0"
      data-cy="textInput-label"
      for="layers"
    >
      Atmosphere layer
    </label>
    <span
      class="emotion-1"
    >
      <select
        aria-describedby="layers-errorMsg0 layers-errorMsg1"
        aria-invalid="true"
        class="emotion-2"
        data-cy="selectInput-select selectInput-select.error"
        id="layers"
      >
        <option
          value="exosphere"
        >
          Exosphere
        </option>
        <option
          value="thermosphere"
        >
          Thermosphere
        </option>
        <option
          value="mesosphere"
        >
          Mesosphere
        </option>
        <option
          value="stratosphere"
        >
          Stratosphere
        </option>
        <option
          value="troposphere"
        >
          Troposphere
        </option>
        <option
          disabled=""
          value="disabled"
        >
          Can't touch this
        </option>
      </select>
      <span
        class="emotion-3"
      >
        <svg
          aria-label="system-triangle-down icon"
          class="emotion-4"
          data-cy="icon"
          height="16"
          preserveAspectRatio="xMinYMin meet"
          role="img"
          viewBox="0 0 16 16"
          width="16"
        >
          <use
            xlink:href="#system-triangle-down"
          />
        </svg>
      </span>
    </span>
    <div
      data-cy="selectInput-hintContent"
    >
      <ul
        class="emotion-5"
      >
        <li
          class="emotion-6"
          id="layers-errorMsg0"
        >
          error1
        </li>
        <li
          class="emotion-6"
          id="layers-errorMsg1"
        >
          error2
        </li>
      </ul>
    </div>
  </div>
</DocumentFragment>
`;

exports[`SelectInput renders with hidden label 1`] = `
<DocumentFragment>
  .emotion-0 {
  border: 0;
  clip: rect(0 0 0 0);
  position: absolute;
  overflow: hidden;
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
}

.emotion-1 {
  position: relative;
  border: 1px solid;
  border-radius: 4px;
  color: inherit;
  height: 36px;
  font-size: inherit;
  padding-left: 16px;
  padding-right: 16px;
  background-color: var(--themeBgPrimary, #FFFFFF);
  border-color: var(--themeBorder, #DADDE2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-1::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input {
  font-size: inherit;
  color: inherit;
}

.emotion-1 input::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1:focus {
  background-color: rgba(125,88,255,0.05);
  border-color: var(--themeBrandPrimary, #7D58FF);
}

.emotion-2 {
  background: none;
  border: 0;
  box-shadow: none;
  padding: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  color: inherit;
  font-size: inherit;
  padding-right: 32px;
  width: 100%;
  display: block;
}

.emotion-2:focus {
  outline: 0;
}

.emotion-2:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 var(--themeTextColorPrimary, #1B2029);
}

.emotion-2::-ms-expand {
  display: none;
}

.emotion-3 {
  font-size: 0;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  padding-left: 16px;
  padding-right: 16px;
}

.emotion-3 svg {
  fill: var(--themeTextColorPrimary, #1B2029);
}

.emotion-4 {
  vertical-align: middle;
  fill: inherit;
}

.emotion-4 use {
  pointer-events: none;
}

<div
    data-cy="selectInput selectInput.standard"
  >
    <label
      class="emotion-0"
      data-cy="textInput-label"
      for="layers"
      hidden=""
    >
      Atmosphere layer
    </label>
    <span
      class="emotion-1"
    >
      <select
        aria-describedby=""
        aria-invalid="false"
        class="emotion-2"
        data-cy="selectInput-select selectInput-select.standard"
        id="layers"
      >
        <option
          value="exosphere"
        >
          Exosphere
        </option>
        <option
          value="thermosphere"
        >
          Thermosphere
        </option>
        <option
          value="mesosphere"
        >
          Mesosphere
        </option>
        <option
          value="stratosphere"
        >
          Stratosphere
        </option>
        <option
          value="troposphere"
        >
          Troposphere
        </option>
        <option
          disabled=""
          value="disabled"
        >
          Can't touch this
        </option>
      </select>
      <span
        class="emotion-3"
      >
        <svg
          aria-label="system-triangle-down icon"
          class="emotion-4"
          data-cy="icon"
          height="16"
          preserveAspectRatio="xMinYMin meet"
          role="img"
          viewBox="0 0 16 16"
          width="16"
        >
          <use
            xlink:href="#system-triangle-down"
          />
        </svg>
      </span>
    </span>
  </div>
</DocumentFragment>
`;

exports[`SelectInput should render all appearances focus 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
}

.emotion-1 {
  position: relative;
  border: 1px solid;
  border-radius: 4px;
  color: inherit;
  height: 36px;
  font-size: inherit;
  padding-left: 16px;
  padding-right: 16px;
  background-color: rgba(125,88,255,0.05);
  border-color: var(--themeBrandPrimary, #7D58FF);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-1::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input {
  font-size: inherit;
  color: inherit;
}

.emotion-1 input::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2 {
  background: none;
  border: 0;
  box-shadow: none;
  padding: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  color: inherit;
  font-size: inherit;
  padding-right: 32px;
  width: 100%;
  display: block;
}

.emotion-2:focus {
  outline: 0;
}

.emotion-2:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 var(--themeTextColorPrimary, #1B2029);
}

.emotion-2::-ms-expand {
  display: none;
}

.emotion-3 {
  font-size: 0;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  padding-left: 16px;
  padding-right: 16px;
}

.emotion-3 svg {
  fill: var(--themeBrandPrimary, #7D58FF);
}

.emotion-4 {
  vertical-align: middle;
  fill: inherit;
}

.emotion-4 use {
  pointer-events: none;
}

<div
    data-cy="selectInput selectInput.standard"
  >
    <label
      class="emotion-0"
      data-cy="textInput-label"
      for="layers"
    >
      Atmosphere layer
    </label>
    <span
      class="emotion-1"
    >
      <select
        aria-describedby=""
        aria-invalid="false"
        class="emotion-2"
        data-cy="selectInput-select selectInput-select.standard"
        id="layers"
      >
        <option
          value="exosphere"
        >
          Exosphere
        </option>
        <option
          value="thermosphere"
        >
          Thermosphere
        </option>
        <option
          value="mesosphere"
        >
          Mesosphere
        </option>
        <option
          value="stratosphere"
        >
          Stratosphere
        </option>
        <option
          value="troposphere"
        >
          Troposphere
        </option>
        <option
          disabled=""
          value="disabled"
        >
          Can't touch this
        </option>
      </select>
      <span
        class="emotion-3"
      >
        <svg
          aria-label="system-triangle-down icon"
          class="emotion-4"
          data-cy="icon"
          height="16"
          preserveAspectRatio="xMinYMin meet"
          role="img"
          viewBox="0 0 16 16"
          width="16"
        >
          <use
            xlink:href="#system-triangle-down"
          />
        </svg>
      </span>
    </span>
  </div>
</DocumentFragment>
`;

exports[`SelectInput should render all appearances focus 2`] = `
<DocumentFragment>
  .emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
  color: var(--themeError, #EB293A);
  fill: var(--themeError, #EB293A);
}

.emotion-1 {
  position: relative;
  border: 1px solid;
  border-radius: 4px;
  color: inherit;
  height: 36px;
  font-size: inherit;
  padding-left: 16px;
  padding-right: 16px;
  background-color: rgba(235,41,58,0.05);
  border-color: var(--themeError, #EB293A);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-1::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input {
  font-size: inherit;
  color: inherit;
}

.emotion-1 input::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2 {
  background: none;
  border: 0;
  box-shadow: none;
  padding: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  color: inherit;
  font-size: inherit;
  padding-right: 32px;
  width: 100%;
  display: block;
}

.emotion-2:focus {
  outline: 0;
}

.emotion-2:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 var(--themeTextColorPrimary, #1B2029);
}

.emotion-2::-ms-expand {
  display: none;
}

.emotion-3 {
  font-size: 0;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  padding-left: 16px;
  padding-right: 16px;
}

.emotion-3 svg {
  fill: var(--themeError, #EB293A);
}

.emotion-4 {
  vertical-align: middle;
  fill: inherit;
}

.emotion-4 use {
  pointer-events: none;
}

<div
    data-cy="selectInput selectInput.error"
  >
    <label
      class="emotion-0"
      data-cy="textInput-label"
      for="layers"
    >
      Atmosphere layer
    </label>
    <span
      class="emotion-1"
    >
      <select
        aria-describedby=""
        aria-invalid="false"
        class="emotion-2"
        data-cy="selectInput-select selectInput-select.error"
        id="layers"
      >
        <option
          value="exosphere"
        >
          Exosphere
        </option>
        <option
          value="thermosphere"
        >
          Thermosphere
        </option>
        <option
          value="mesosphere"
        >
          Mesosphere
        </option>
        <option
          value="stratosphere"
        >
          Stratosphere
        </option>
        <option
          value="troposphere"
        >
          Troposphere
        </option>
        <option
          disabled=""
          value="disabled"
        >
          Can't touch this
        </option>
      </select>
      <span
        class="emotion-3"
      >
        <svg
          aria-label="system-triangle-down icon"
          class="emotion-4"
          data-cy="icon"
          height="16"
          preserveAspectRatio="xMinYMin meet"
          role="img"
          viewBox="0 0 16 16"
          width="16"
        >
          <use
            xlink:href="#system-triangle-down"
          />
        </svg>
      </span>
    </span>
    <div
      data-cy="selectInput-hintContent"
    />
  </div>
</DocumentFragment>
`;

exports[`SelectInput should render all appearances focus 3`] = `
<DocumentFragment>
  .emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
}

.emotion-1 {
  position: relative;
  border: 1px solid;
  border-radius: 4px;
  color: inherit;
  height: 36px;
  font-size: inherit;
  padding-left: 16px;
  padding-right: 16px;
  background-color: rgba(20,198,132,0.05);
  border-color: var(--themeSuccess, #14C684);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-1::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input {
  font-size: inherit;
  color: inherit;
}

.emotion-1 input::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-1 input::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2 {
  background: none;
  border: 0;
  box-shadow: none;
  padding: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  color: inherit;
  font-size: inherit;
  padding-right: 32px;
  width: 100%;
  display: block;
}

.emotion-2:focus {
  outline: 0;
}

.emotion-2:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 var(--themeTextColorPrimary, #1B2029);
}

.emotion-2::-ms-expand {
  display: none;
}

.emotion-3 {
  font-size: 0;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  padding-left: 16px;
  padding-right: 16px;
}

.emotion-3 svg {
  fill: var(--themeSuccess, #14C684);
}

.emotion-4 {
  vertical-align: middle;
  fill: inherit;
}

.emotion-4 use {
  pointer-events: none;
}

<div
    data-cy="selectInput selectInput.success"
  >
    <label
      class="emotion-0"
      data-cy="textInput-label"
      for="layers"
    >
      Atmosphere layer
    </label>
    <span
      class="emotion-1"
    >
      <select
        aria-describedby=""
        aria-invalid="false"
        class="emotion-2"
        data-cy="selectInput-select selectInput-select.success"
        id="layers"
      >
        <option
          value="exosphere"
        >
          Exosphere
        </option>
        <option
          value="thermosphere"
        >
          Thermosphere
        </option>
        <option
          value="mesosphere"
        >
          Mesosphere
        </option>
        <option
          value="stratosphere"
        >
          Stratosphere
        </option>
        <option
          value="troposphere"
        >
          Troposphere
        </option>
        <option
          disabled=""
          value="disabled"
        >
          Can't touch this
        </option>
      </select>
      <span
        class="emotion-3"
      >
        <svg
          aria-label="system-triangle-down icon"
          class="emotion-4"
          data-cy="icon"
          height="16"
          preserveAspectRatio="xMinYMin meet"
          role="img"
          viewBox="0 0 16 16"
          width="16"
        >
          <use
            xlink:href="#system-triangle-down"
          />
        </svg>
      </span>
    </span>
  </div>
</DocumentFragment>
`;
