// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInputWithIcon should render all appearances with iconEnd 1`] = `
.emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: auto;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-1 > div {
  width: auto;
}

<div
  data-cy="textInput"
>
  <div
    className="emotion-1"
    data-cy="textInput-label"
  >
    <label
      className="emotion-0"
      htmlFor="test.icon_end_input.standard"
    >
      standard
    </label>
  </div>
  <FormFieldWrapper
    id="test.icon_end_input.standard"
  >
    <Component />
  </FormFieldWrapper>
</div>
`;

exports[`TextInputWithIcon should render all appearances with iconEnd 2`] = `
.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: auto;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-1 > div {
  width: auto;
}

.emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
  color: var(--themeError,#EB293A);
  fill: var(--themeError,#EB293A);
}

<div
  data-cy="textInput textInput.error"
>
  <div
    className="emotion-1"
    data-cy="textInput-label"
  >
    <label
      className="emotion-0"
      htmlFor="test.icon_end_input.error"
    >
      error
    </label>
  </div>
  <FormFieldWrapper
    id="test.icon_end_input.error"
  >
    <Component />
  </FormFieldWrapper>
</div>
`;

exports[`TextInputWithIcon should render all appearances with iconEnd 3`] = `
.emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: auto;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-1 > div {
  width: auto;
}

<div
  data-cy="textInput textInput.success"
>
  <div
    className="emotion-1"
    data-cy="textInput-label"
  >
    <label
      className="emotion-0"
      htmlFor="test.icon_end_input.success"
    >
      success
    </label>
  </div>
  <FormFieldWrapper
    id="test.icon_end_input.success"
  >
    <Component />
  </FormFieldWrapper>
</div>
`;

exports[`TextInputWithIcon should render all appearances with iconStart 1`] = `
.emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: auto;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-1 > div {
  width: auto;
}

<div
  data-cy="textInput"
>
  <div
    className="emotion-1"
    data-cy="textInput-label"
  >
    <label
      className="emotion-0"
      htmlFor="test.icon_start_input.standard"
    >
      standard
    </label>
  </div>
  <FormFieldWrapper
    id="test.icon_start_input.standard"
  >
    <Component />
  </FormFieldWrapper>
</div>
`;

exports[`TextInputWithIcon should render all appearances with iconStart 2`] = `
.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: auto;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-1 > div {
  width: auto;
}

.emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
  color: var(--themeError,#EB293A);
  fill: var(--themeError,#EB293A);
}

<div
  data-cy="textInput textInput.error"
>
  <div
    className="emotion-1"
    data-cy="textInput-label"
  >
    <label
      className="emotion-0"
      htmlFor="test.icon_start_input.error"
    >
      error
    </label>
  </div>
  <FormFieldWrapper
    id="test.icon_start_input.error"
  >
    <Component />
  </FormFieldWrapper>
</div>
`;

exports[`TextInputWithIcon should render all appearances with iconStart 3`] = `
.emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: auto;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-1 > div {
  width: auto;
}

<div
  data-cy="textInput textInput.success"
>
  <div
    className="emotion-1"
    data-cy="textInput-label"
  >
    <label
      className="emotion-0"
      htmlFor="test.icon_start_input.success"
    >
      success
    </label>
  </div>
  <FormFieldWrapper
    id="test.icon_start_input.success"
  >
    <Component />
  </FormFieldWrapper>
</div>
`;

exports[`TextInputWithIcon should render all appearances with twoIcons 1`] = `
.emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: auto;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-1 > div {
  width: auto;
}

<div
  data-cy="textInput"
>
  <div
    className="emotion-1"
    data-cy="textInput-label"
  >
    <label
      className="emotion-0"
      htmlFor="test.two_icon_input.standard"
    >
      standard
    </label>
  </div>
  <FormFieldWrapper
    id="test.two_icon_input.standard"
  >
    <Component />
  </FormFieldWrapper>
</div>
`;

exports[`TextInputWithIcon should render all appearances with twoIcons 2`] = `
.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: auto;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-1 > div {
  width: auto;
}

.emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
  color: var(--themeError,#EB293A);
  fill: var(--themeError,#EB293A);
}

<div
  data-cy="textInput textInput.error"
>
  <div
    className="emotion-1"
    data-cy="textInput-label"
  >
    <label
      className="emotion-0"
      htmlFor="test.two_icon_input.error"
    >
      error
    </label>
  </div>
  <FormFieldWrapper
    id="test.two_icon_input.error"
  >
    <Component />
  </FormFieldWrapper>
</div>
`;

exports[`TextInputWithIcon should render all appearances with twoIcons 3`] = `
.emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: auto;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-1 > div {
  width: auto;
}

<div
  data-cy="textInput textInput.success"
>
  <div
    className="emotion-1"
    data-cy="textInput-label"
  >
    <label
      className="emotion-0"
      htmlFor="test.two_icon_input.success"
    >
      success
    </label>
  </div>
  <FormFieldWrapper
    id="test.two_icon_input.success"
  >
    <Component />
  </FormFieldWrapper>
</div>
`;
