// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Typeahead renders 1`] = `
.emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
}

.emotion-1 {
  -webkit-align-items: flex;
  -webkit-box-align: flex;
  -ms-flex-align: flex;
  align-items: flex;
  height: auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-flex-wrap: nowrap;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-1>div {
  width: auto;
}

.emotion-2 {
  background: none;
  border: 0;
  box-shadow: none;
  padding: 0;
  padding-left: 16px;
  padding-right: 16px;
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
  border: 1px solid;
  border-radius: 4px;
  color: inherit;
  height: 36px;
  font-size: inherit;
  padding-left: 16px;
  padding-right: 16px;
  background-color: var(--themeBgPrimary, #FFFFFF);
  border-color: var(--themeBorder, #DADDE2);
}

.emotion-2:focus {
  outline: 0;
}

.emotion-2::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2 input {
  font-size: inherit;
  color: inherit;
}

.emotion-2 input::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2 input::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2 input:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2 input::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2:focus {
  background-color: rgba(125,88,255,0.05);
  border-color: var(--themeBrandPrimary, #7D58FF);
}

<Typeahead
  items={
    Array [
      Object {
        "label": "Exosphere",
        "value": "Exosphere",
      },
      Object {
        "label": "Thermosphere",
        "value": "Thermosphere",
      },
      Object {
        "label": "Stratosphere",
        "value": "Stratosphere",
      },
    ]
  }
  menuMaxHeight={300}
  textField={
    <TextInput
      appearance="standard"
      id="standard.input"
      inputLabel="Standard"
      placeholder="Placeholder"
      showInputLabel={true}
      type="text"
    />
  }
>
  <div
    data-cy="typeahead"
  >
    <Downshift
      defaultHighlightedIndex={null}
      defaultIsOpen={false}
      environment={[Window]}
      getA11yStatusMessage={[Function]}
      itemToString={[Function]}
      onChange={[Function]}
      onInputValueChange={[Function]}
      onOuterClick={[Function]}
      onSelect={[Function]}
      onStateChange={[Function]}
      onUserAction={[Function]}
      scrollIntoView={[Function]}
      selectedItemChanged={[Function]}
      stateReducer={[Function]}
      suppressRefError={false}
    >
      <div
        aria-expanded={false}
        aria-haspopup="listbox"
        aria-labelledby="downshift-0-label"
        aria-owns={null}
        role="combobox"
      >
        <Dropdownable
          dropdown={
            <div
              data-cy="typeahead-dropdown"
            >
              .emotion-0 {
  margin-top: 4px;
}

<div
                className="emotion-0"
              >
                <Popover
                  aria-labelledby="downshift-0-label"
                  id="downshift-0-menu"
                  maxHeight={300}
                  menuRef={[Function]}
                  role="listbox"
                  width={null}
                >
                  <PopoverListItem
                    aria-selected={false}
                    id="downshift-0-item-0"
                    index={0}
                    isActive={false}
                    isSelected={null}
                    listLength={3}
                    onClick={[Function]}
                    onMouseDown={[Function]}
                    onMouseMove={[Function]}
                    role="option"
                  >
                    Exosphere
                  </PopoverListItem>
                  <PopoverListItem
                    aria-selected={false}
                    id="downshift-0-item-1"
                    index={1}
                    isActive={false}
                    isSelected={null}
                    listLength={3}
                    onClick={[Function]}
                    onMouseDown={[Function]}
                    onMouseMove={[Function]}
                    role="option"
                  >
                    Thermosphere
                  </PopoverListItem>
                  <PopoverListItem
                    aria-selected={false}
                    id="downshift-0-item-2"
                    index={2}
                    isActive={false}
                    isSelected={null}
                    listLength={3}
                    onClick={[Function]}
                    onMouseDown={[Function]}
                    onMouseMove={[Function]}
                    role="option"
                  >
                    Stratosphere
                  </PopoverListItem>
                </Popover>
              </div>
            </div>
          }
          isOpen={false}
        >
          <div>
            <TextInput
              appearance="standard"
              aria-activedescendant={null}
              aria-autocomplete="list"
              aria-controls={null}
              aria-labelledby="downshift-0-label"
              autoComplete="off"
              downshiftReset={[Function]}
              id="standard.input"
              inputLabel="Standard"
              onBlur={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              placeholder="Placeholder"
              showInputLabel={true}
              type="text"
              value=""
            >
              <div
                data-cy="textInput textInput.standard"
              >
                <label
                  className="emotion-0"
                  data-cy="textInput-label"
                  htmlFor="standard.input"
                >
                  Standard
                </label>
                <FormFieldWrapper
                  id="standard.input"
                >
                  <div>
                    <div
                      className="emotion-1"
                    >
                      <input
                        aria-activedescendant={null}
                        aria-autocomplete="list"
                        aria-controls={null}
                        aria-describedby=""
                        aria-invalid={false}
                        aria-labelledby="downshift-0-label"
                        autoComplete="off"
                        className="emotion-2"
                        data-cy="textInput-input"
                        downshiftReset={[Function]}
                        id="standard.input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder="Placeholder"
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      data-cy="textInput-hintContent"
                    />
                  </div>
                </FormFieldWrapper>
              </div>
            </TextInput>
          </div>
        </Dropdownable>
      </div>
    </Downshift>
  </div>
</Typeahead>
`;

exports[`Typeahead renders a menu with a max height 1`] = `
.emotion-0 {
  display: block;
  padding-top: 0;
  margin-top: 0;
  margin-bottom: 4px;
  font-weight: 500;
}

.emotion-1 {
  -webkit-align-items: flex;
  -webkit-box-align: flex;
  -ms-flex-align: flex;
  align-items: flex;
  height: auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-flex-wrap: nowrap;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 0;
}

.emotion-1>div {
  width: auto;
}

.emotion-2 {
  background: none;
  border: 0;
  box-shadow: none;
  padding: 0;
  padding-left: 16px;
  padding-right: 16px;
  box-sizing: border-box;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  width: auto;
  border: 1px solid;
  border-radius: 4px;
  color: inherit;
  height: 36px;
  font-size: inherit;
  padding-left: 16px;
  padding-right: 16px;
  background-color: var(--themeBgPrimary, #FFFFFF);
  border-color: var(--themeBorder, #DADDE2);
}

.emotion-2:focus {
  outline: 0;
}

.emotion-2::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2 input {
  font-size: inherit;
  color: inherit;
}

.emotion-2 input::-webkit-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2 input::-moz-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2 input:-ms-input-placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2 input::placeholder {
  color: var(--themeTextColorPrimary, #1B2029);
  opacity: 0.4;
}

.emotion-2:focus {
  background-color: rgba(125,88,255,0.05);
  border-color: var(--themeBrandPrimary, #7D58FF);
}

<Typeahead
  items={
    Array [
      Object {
        "label": "Exosphere",
        "value": "Exosphere",
      },
      Object {
        "label": "Thermosphere",
        "value": "Thermosphere",
      },
      Object {
        "label": "Stratosphere",
        "value": "Stratosphere",
      },
    ]
  }
  menuMaxHeight={100}
  textField={
    <TextInput
      appearance="standard"
      id="standard.input"
      inputLabel="Standard"
      placeholder="Placeholder"
      showInputLabel={true}
      type="text"
    />
  }
>
  <div
    data-cy="typeahead"
  >
    <Downshift
      defaultHighlightedIndex={null}
      defaultIsOpen={false}
      environment={[Window]}
      getA11yStatusMessage={[Function]}
      itemToString={[Function]}
      onChange={[Function]}
      onInputValueChange={[Function]}
      onOuterClick={[Function]}
      onSelect={[Function]}
      onStateChange={[Function]}
      onUserAction={[Function]}
      scrollIntoView={[Function]}
      selectedItemChanged={[Function]}
      stateReducer={[Function]}
      suppressRefError={false}
    >
      <div
        aria-expanded={false}
        aria-haspopup="listbox"
        aria-labelledby="downshift-1-label"
        aria-owns={null}
        role="combobox"
      >
        <Dropdownable
          dropdown={
            <div
              data-cy="typeahead-dropdown"
            >
              .emotion-0 {
  margin-top: 4px;
}

<div
                className="emotion-0"
              >
                <Popover
                  aria-labelledby="downshift-1-label"
                  id="downshift-1-menu"
                  maxHeight={100}
                  menuRef={[Function]}
                  role="listbox"
                  width={null}
                >
                  <PopoverListItem
                    aria-selected={false}
                    id="downshift-1-item-0"
                    index={0}
                    isActive={false}
                    isSelected={null}
                    listLength={3}
                    onClick={[Function]}
                    onMouseDown={[Function]}
                    onMouseMove={[Function]}
                    role="option"
                  >
                    Exosphere
                  </PopoverListItem>
                  <PopoverListItem
                    aria-selected={false}
                    id="downshift-1-item-1"
                    index={1}
                    isActive={false}
                    isSelected={null}
                    listLength={3}
                    onClick={[Function]}
                    onMouseDown={[Function]}
                    onMouseMove={[Function]}
                    role="option"
                  >
                    Thermosphere
                  </PopoverListItem>
                  <PopoverListItem
                    aria-selected={false}
                    id="downshift-1-item-2"
                    index={2}
                    isActive={false}
                    isSelected={null}
                    listLength={3}
                    onClick={[Function]}
                    onMouseDown={[Function]}
                    onMouseMove={[Function]}
                    role="option"
                  >
                    Stratosphere
                  </PopoverListItem>
                </Popover>
              </div>
            </div>
          }
          isOpen={false}
        >
          <div>
            <TextInput
              appearance="standard"
              aria-activedescendant={null}
              aria-autocomplete="list"
              aria-controls={null}
              aria-labelledby="downshift-1-label"
              autoComplete="off"
              downshiftReset={[Function]}
              id="standard.input"
              inputLabel="Standard"
              onBlur={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              placeholder="Placeholder"
              showInputLabel={true}
              type="text"
              value=""
            >
              <div
                data-cy="textInput textInput.standard"
              >
                <label
                  className="emotion-0"
                  data-cy="textInput-label"
                  htmlFor="standard.input"
                >
                  Standard
                </label>
                <FormFieldWrapper
                  id="standard.input"
                >
                  <div>
                    <div
                      className="emotion-1"
                    >
                      <input
                        aria-activedescendant={null}
                        aria-autocomplete="list"
                        aria-controls={null}
                        aria-describedby=""
                        aria-invalid={false}
                        aria-labelledby="downshift-1-label"
                        autoComplete="off"
                        className="emotion-2"
                        data-cy="textInput-input"
                        downshiftReset={[Function]}
                        id="standard.input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder="Placeholder"
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      data-cy="textInput-hintContent"
                    />
                  </div>
                </FormFieldWrapper>
              </div>
            </TextInput>
          </div>
        </Dropdownable>
      </div>
    </Downshift>
  </div>
</Typeahead>
`;
