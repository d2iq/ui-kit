"use strict";(self.webpackChunk_d2iq_ui_kit=self.webpackChunk_d2iq_ui_kit||[]).push([[6945],{"./packages/toggleWrapper/stories/ToggleWrapper.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_index__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/toggleWrapper/index.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const __WEBPACK_DEFAULT_EXPORT__={title:"Utils/ToggleWrapper",component:_index__WEBPACK_IMPORTED_MODULE_1__.w,args:{isActive:!1}},Default={render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index__WEBPACK_IMPORTED_MODULE_1__.w,_extends({value:""},args),(({isActive})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,"The isActive render prop returns:",react__WEBPACK_IMPORTED_MODULE_0__.createElement("code",null,` ${isActive}`))))};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: Template\n}",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]},"./packages/toggleWrapper/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{w:()=>components_ToggleWrapper});var react=__webpack_require__("./node_modules/react/index.js"),styleUtils=__webpack_require__("./packages/shared/styles/styleUtils/index.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const ToggleWrapper=({id,children,"data-cy":dataCy="toggleWrapper-input",isActive,onFocus,onBlur,type="checkbox",value="",...other})=>{const generatedId=`toggleWrapper-${react.useId()}`,toggleWrapperId=id||generatedId,[hasFocus,setHasFocus]=react.useState(!1);return delete other.checked,delete other.className,react.createElement("label",{htmlFor:toggleWrapperId,className:(0,styleUtils.jf)("block")},react.createElement("input",_extends({id:toggleWrapperId,className:styleUtils.jy,defaultChecked:isActive,"aria-checked":isActive,"data-cy":dataCy,onFocus:e=>{setHasFocus(!0),onFocus&&onFocus(e)},onBlur:e=>{setHasFocus(!1),onBlur&&onBlur(e)},type,value},other)),children({isActive,hasFocus}))},components_ToggleWrapper=react.memo(ToggleWrapper);try{ToggleWrapper.displayName="ToggleWrapper",ToggleWrapper.__docgenInfo={description:"",displayName:"ToggleWrapper",props:{id:{defaultValue:null,description:"The unique identifier for the toggle",name:"id",required:!1,type:{name:"string"}},value:{defaultValue:{value:""},description:"The value being toggled",name:"value",required:!1,type:{name:"string"}},type:{defaultValue:{value:"checkbox"},description:"The type of boolean input element",name:"type",required:!1,type:{name:"enum",value:[{value:'"checkbox"'},{value:'"radio"'}]}},"data-cy":{defaultValue:null,description:"human-readable selector used for writing tests",name:"data-cy",required:!1,type:{name:"string"}},isActive:{defaultValue:null,description:'Whether the component is in the "on" state',name:"isActive",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/toggleWrapper/components/ToggleWrapper.tsx#ToggleWrapper"]={docgenInfo:ToggleWrapper.__docgenInfo,name:"ToggleWrapper",path:"packages/toggleWrapper/components/ToggleWrapper.tsx#ToggleWrapper"})}catch(__react_docgen_typescript_loader_error){}}}]);